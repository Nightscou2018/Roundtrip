apply plugin: 'com.android.application'

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.gxwtech.rtdemo"
        minSdkVersion 21
        targetSdkVersion 21
        versionCode getVersionCode()
        versionName getVersionName()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-Rurules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile 'org.mongodb:bson:2.13.2'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'org.mongodb:mongo-java-driver:2.13.2'
    compile 'com.google.code.gson:gson:2.3'
    compile 'joda-time:joda-time:2.5'
    compile 'com.android.support:support-v4:22.2.1'
    compile 'com.google.protobuf:protobuf-java:2.6.1'

    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'

    testCompile 'org.json:json:20140107'

    // Based on https://developer.android.com/training/testing/unit-testing/local-unit-tests.html
    testCompile 'junit:junit:4.12'
    // Set this dependency if you want to use Mockito
    testCompile 'org.mockito:mockito-core:1.10.19'
    // Set this dependency if you want to use Hamcrest matching
    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
}

