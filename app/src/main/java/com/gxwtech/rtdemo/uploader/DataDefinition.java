package com.gxwtech.rtdemo.uploader;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataDefinition.proto

public final class DataDefinition {
    private DataDefinition() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }
    /**
     * Protobuf enum {@code GlucoseUnit}
     */
    public enum GlucoseUnit
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>MGDL = 0;</code>
         */
        MGDL(0, 0),
        /**
         * <code>MMOL = 1;</code>
         */
        MMOL(1, 1),
        ;

        /**
         * <code>MGDL = 0;</code>
         */
        public static final int MGDL_VALUE = 0;
        /**
         * <code>MMOL = 1;</code>
         */
        public static final int MMOL_VALUE = 1;


        public final int getNumber() { return value; }

        public static GlucoseUnit valueOf(int value) {
            switch (value) {
                case 0: return MGDL;
                case 1: return MMOL;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<GlucoseUnit>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<GlucoseUnit>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<GlucoseUnit>() {
                    public GlucoseUnit findValueByNumber(int number) {
                        return GlucoseUnit.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DataDefinition.getDescriptor().getEnumTypes().get(0);
        }

        private static final GlucoseUnit[] VALUES = values();

        public static GlucoseUnit valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private GlucoseUnit(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:GlucoseUnit)
    }

    /**
     * Protobuf enum {@code DownloadStatus}
     */
    public enum DownloadStatus
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SUCCESS = 0;</code>
         */
        SUCCESS(0, 0),
        /**
         * <code>NO_DATA = 1;</code>
         */
        NO_DATA(1, 1),
        /**
         * <code>DEVICE_NOT_FOUND = 2;</code>
         */
        DEVICE_NOT_FOUND(2, 2),
        /**
         * <code>IO_ERROR = 3;</code>
         */
        IO_ERROR(3, 3),
        /**
         * <code>APPLICATION_ERROR = 4;</code>
         */
        APPLICATION_ERROR(4, 4),
        /**
         * <code>UNKNOWN = 5;</code>
         */
        UNKNOWN(5, 5),
        /**
         * <code>NOT_APPLICABLE = 6;</code>
         */
        NOT_APPLICABLE(6, 6),
        ;

        /**
         * <code>SUCCESS = 0;</code>
         */
        public static final int SUCCESS_VALUE = 0;
        /**
         * <code>NO_DATA = 1;</code>
         */
        public static final int NO_DATA_VALUE = 1;
        /**
         * <code>DEVICE_NOT_FOUND = 2;</code>
         */
        public static final int DEVICE_NOT_FOUND_VALUE = 2;
        /**
         * <code>IO_ERROR = 3;</code>
         */
        public static final int IO_ERROR_VALUE = 3;
        /**
         * <code>APPLICATION_ERROR = 4;</code>
         */
        public static final int APPLICATION_ERROR_VALUE = 4;
        /**
         * <code>UNKNOWN = 5;</code>
         */
        public static final int UNKNOWN_VALUE = 5;
        /**
         * <code>NOT_APPLICABLE = 6;</code>
         */
        public static final int NOT_APPLICABLE_VALUE = 6;


        public final int getNumber() { return value; }

        public static DownloadStatus valueOf(int value) {
            switch (value) {
                case 0: return SUCCESS;
                case 1: return NO_DATA;
                case 2: return DEVICE_NOT_FOUND;
                case 3: return IO_ERROR;
                case 4: return APPLICATION_ERROR;
                case 5: return UNKNOWN;
                case 6: return NOT_APPLICABLE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DownloadStatus>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<DownloadStatus>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<DownloadStatus>() {
                    public DownloadStatus findValueByNumber(int number) {
                        return DownloadStatus.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DataDefinition.getDescriptor().getEnumTypes().get(1);
        }

        private static final DownloadStatus[] VALUES = values();

        public static DownloadStatus valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private DownloadStatus(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:DownloadStatus)
    }

    /**
     * Protobuf enum {@code G4Trend}
     */
    public enum G4Trend
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>TREND_NONE = 0;</code>
         */
        TREND_NONE(0, 0),
        /**
         * <code>DOUBLE_UP = 1;</code>
         *
         * <pre>
         * More than 3 mg/dL per minute
         * </pre>
         */
        DOUBLE_UP(1, 1),
        /**
         * <code>SINGLE_UP = 2;</code>
         *
         * <pre>
         * +2 to +3 mg/dL per minute
         * </pre>
         */
        SINGLE_UP(2, 2),
        /**
         * <code>FORTY_FIVE_UP = 3;</code>
         *
         * <pre>
         * +1 to +2 mg/dL per minute
         * </pre>
         */
        FORTY_FIVE_UP(3, 3),
        /**
         * <code>FLAT = 4;</code>
         *
         * <pre>
         * +/- 1 mg/dL per minute
         * </pre>
         */
        FLAT(4, 4),
        /**
         * <code>FORTY_FIVE_DOWN = 5;</code>
         *
         * <pre>
         * -1 to -2 mg/dL per minute
         * </pre>
         */
        FORTY_FIVE_DOWN(5, 5),
        /**
         * <code>SINGLE_DOWN = 6;</code>
         *
         * <pre>
         * -2 to -3 mg/dL per minute
         * </pre>
         */
        SINGLE_DOWN(6, 6),
        /**
         * <code>DOUBLE_DOWN = 7;</code>
         *
         * <pre>
         * more than -3 mg/dL per minute
         * </pre>
         */
        DOUBLE_DOWN(7, 7),
        /**
         * <code>NOT_COMPUTABLE = 8;</code>
         */
        NOT_COMPUTABLE(8, 8),
        /**
         * <code>RATE_OUT_OF_RANGE = 9;</code>
         */
        RATE_OUT_OF_RANGE(9, 9),
        ;

        /**
         * <code>TREND_NONE = 0;</code>
         */
        public static final int TREND_NONE_VALUE = 0;
        /**
         * <code>DOUBLE_UP = 1;</code>
         *
         * <pre>
         * More than 3 mg/dL per minute
         * </pre>
         */
        public static final int DOUBLE_UP_VALUE = 1;
        /**
         * <code>SINGLE_UP = 2;</code>
         *
         * <pre>
         * +2 to +3 mg/dL per minute
         * </pre>
         */
        public static final int SINGLE_UP_VALUE = 2;
        /**
         * <code>FORTY_FIVE_UP = 3;</code>
         *
         * <pre>
         * +1 to +2 mg/dL per minute
         * </pre>
         */
        public static final int FORTY_FIVE_UP_VALUE = 3;
        /**
         * <code>FLAT = 4;</code>
         *
         * <pre>
         * +/- 1 mg/dL per minute
         * </pre>
         */
        public static final int FLAT_VALUE = 4;
        /**
         * <code>FORTY_FIVE_DOWN = 5;</code>
         *
         * <pre>
         * -1 to -2 mg/dL per minute
         * </pre>
         */
        public static final int FORTY_FIVE_DOWN_VALUE = 5;
        /**
         * <code>SINGLE_DOWN = 6;</code>
         *
         * <pre>
         * -2 to -3 mg/dL per minute
         * </pre>
         */
        public static final int SINGLE_DOWN_VALUE = 6;
        /**
         * <code>DOUBLE_DOWN = 7;</code>
         *
         * <pre>
         * more than -3 mg/dL per minute
         * </pre>
         */
        public static final int DOUBLE_DOWN_VALUE = 7;
        /**
         * <code>NOT_COMPUTABLE = 8;</code>
         */
        public static final int NOT_COMPUTABLE_VALUE = 8;
        /**
         * <code>RATE_OUT_OF_RANGE = 9;</code>
         */
        public static final int RATE_OUT_OF_RANGE_VALUE = 9;


        public final int getNumber() { return value; }

        public static G4Trend valueOf(int value) {
            switch (value) {
                case 0: return TREND_NONE;
                case 1: return DOUBLE_UP;
                case 2: return SINGLE_UP;
                case 3: return FORTY_FIVE_UP;
                case 4: return FLAT;
                case 5: return FORTY_FIVE_DOWN;
                case 6: return SINGLE_DOWN;
                case 7: return DOUBLE_DOWN;
                case 8: return NOT_COMPUTABLE;
                case 9: return RATE_OUT_OF_RANGE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<G4Trend>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<G4Trend>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<G4Trend>() {
                    public G4Trend findValueByNumber(int number) {
                        return G4Trend.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DataDefinition.getDescriptor().getEnumTypes().get(2);
        }

        private static final G4Trend[] VALUES = values();

        public static G4Trend valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private G4Trend(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:G4Trend)
    }

    /**
     * Protobuf enum {@code G4Noise}
     */
    public enum G4Noise
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>NOISE_NONE = 0;</code>
         */
        NOISE_NONE(0, 0),
        /**
         * <code>CLEAN = 1;</code>
         */
        CLEAN(1, 1),
        /**
         * <code>LIGHT = 2;</code>
         */
        LIGHT(2, 2),
        /**
         * <code>MEDIUM = 3;</code>
         */
        MEDIUM(3, 3),
        /**
         * <code>HEAVY = 4;</code>
         */
        HEAVY(4, 4),
        /**
         * <code>NOT_COMPUTED = 5;</code>
         */
        NOT_COMPUTED(5, 5),
        /**
         * <code>MAX = 6;</code>
         */
        MAX(6, 6),
        ;

        /**
         * <code>NOISE_NONE = 0;</code>
         */
        public static final int NOISE_NONE_VALUE = 0;
        /**
         * <code>CLEAN = 1;</code>
         */
        public static final int CLEAN_VALUE = 1;
        /**
         * <code>LIGHT = 2;</code>
         */
        public static final int LIGHT_VALUE = 2;
        /**
         * <code>MEDIUM = 3;</code>
         */
        public static final int MEDIUM_VALUE = 3;
        /**
         * <code>HEAVY = 4;</code>
         */
        public static final int HEAVY_VALUE = 4;
        /**
         * <code>NOT_COMPUTED = 5;</code>
         */
        public static final int NOT_COMPUTED_VALUE = 5;
        /**
         * <code>MAX = 6;</code>
         */
        public static final int MAX_VALUE = 6;


        public final int getNumber() { return value; }

        public static G4Noise valueOf(int value) {
            switch (value) {
                case 0: return NOISE_NONE;
                case 1: return CLEAN;
                case 2: return LIGHT;
                case 3: return MEDIUM;
                case 4: return HEAVY;
                case 5: return NOT_COMPUTED;
                case 6: return MAX;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<G4Noise>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<G4Noise>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<G4Noise>() {
                    public G4Noise findValueByNumber(int number) {
                        return G4Noise.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DataDefinition.getDescriptor().getEnumTypes().get(3);
        }

        private static final G4Noise[] VALUES = values();

        public static G4Noise valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private G4Noise(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:G4Noise)
    }

    /**
     * Protobuf enum {@code G4Insertion}
     */
    public enum G4Insertion
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>INSERTION_NONE = 0;</code>
         */
        INSERTION_NONE(0, 0),
        /**
         * <code>REMOVED = 1;</code>
         */
        REMOVED(1, 1),
        /**
         * <code>EXPIRED = 2;</code>
         */
        EXPIRED(2, 2),
        /**
         * <code>RESIDUAL_DEVIATION = 3;</code>
         */
        RESIDUAL_DEVIATION(3, 3),
        /**
         * <code>COUNTS_DEVIATION = 4;</code>
         */
        COUNTS_DEVIATION(4, 4),
        /**
         * <code>SECOND_SESSION = 5;</code>
         */
        SECOND_SESSION(5, 5),
        /**
         * <code>OFF_TIME_LOSS = 6;</code>
         */
        OFF_TIME_LOSS(6, 6),
        /**
         * <code>STARTED = 7;</code>
         */
        STARTED(7, 7),
        /**
         * <code>BAD_TRANSMITTER = 8;</code>
         */
        BAD_TRANSMITTER(8, 8),
        /**
         * <code>MANUFACTURING_MODE = 9;</code>
         */
        MANUFACTURING_MODE(9, 9),
        /**
         * <code>MAX_VALUE = 10;</code>
         */
        MAX_VALUE(10, 10),
        ;

        /**
         * <code>INSERTION_NONE = 0;</code>
         */
        public static final int INSERTION_NONE_VALUE = 0;
        /**
         * <code>REMOVED = 1;</code>
         */
        public static final int REMOVED_VALUE = 1;
        /**
         * <code>EXPIRED = 2;</code>
         */
        public static final int EXPIRED_VALUE = 2;
        /**
         * <code>RESIDUAL_DEVIATION = 3;</code>
         */
        public static final int RESIDUAL_DEVIATION_VALUE = 3;
        /**
         * <code>COUNTS_DEVIATION = 4;</code>
         */
        public static final int COUNTS_DEVIATION_VALUE = 4;
        /**
         * <code>SECOND_SESSION = 5;</code>
         */
        public static final int SECOND_SESSION_VALUE = 5;
        /**
         * <code>OFF_TIME_LOSS = 6;</code>
         */
        public static final int OFF_TIME_LOSS_VALUE = 6;
        /**
         * <code>STARTED = 7;</code>
         */
        public static final int STARTED_VALUE = 7;
        /**
         * <code>BAD_TRANSMITTER = 8;</code>
         */
        public static final int BAD_TRANSMITTER_VALUE = 8;
        /**
         * <code>MANUFACTURING_MODE = 9;</code>
         */
        public static final int MANUFACTURING_MODE_VALUE = 9;
        /**
         * <code>MAX_VALUE = 10;</code>
         */
        public static final int MAX_VALUE_VALUE = 10;


        public final int getNumber() { return value; }

        public static G4Insertion valueOf(int value) {
            switch (value) {
                case 0: return INSERTION_NONE;
                case 1: return REMOVED;
                case 2: return EXPIRED;
                case 3: return RESIDUAL_DEVIATION;
                case 4: return COUNTS_DEVIATION;
                case 5: return SECOND_SESSION;
                case 6: return OFF_TIME_LOSS;
                case 7: return STARTED;
                case 8: return BAD_TRANSMITTER;
                case 9: return MANUFACTURING_MODE;
                case 10: return MAX_VALUE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<G4Insertion>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<G4Insertion>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<G4Insertion>() {
                    public G4Insertion findValueByNumber(int number) {
                        return G4Insertion.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DataDefinition.getDescriptor().getEnumTypes().get(4);
        }

        private static final G4Insertion[] VALUES = values();

        public static G4Insertion valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private G4Insertion(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:G4Insertion)
    }

    /**
     * Protobuf enum {@code ReceiverStatus}
     */
    public enum ReceiverStatus
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>RECEIVER_CONNECTED = 0;</code>
         *
         * <pre>
         * The receiver is connected to the uploader
         * </pre>
         */
        RECEIVER_CONNECTED(0, 0),
        /**
         * <code>RECEIVER_DISCONNECTED = 1;</code>
         *
         * <pre>
         * The receiver is not connected to the uploader
         * </pre>
         */
        RECEIVER_DISCONNECTED(1, 1),
        ;

        /**
         * <code>RECEIVER_CONNECTED = 0;</code>
         *
         * <pre>
         * The receiver is connected to the uploader
         * </pre>
         */
        public static final int RECEIVER_CONNECTED_VALUE = 0;
        /**
         * <code>RECEIVER_DISCONNECTED = 1;</code>
         *
         * <pre>
         * The receiver is not connected to the uploader
         * </pre>
         */
        public static final int RECEIVER_DISCONNECTED_VALUE = 1;


        public final int getNumber() { return value; }

        public static ReceiverStatus valueOf(int value) {
            switch (value) {
                case 0: return RECEIVER_CONNECTED;
                case 1: return RECEIVER_DISCONNECTED;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ReceiverStatus>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ReceiverStatus>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ReceiverStatus>() {
                    public ReceiverStatus findValueByNumber(int number) {
                        return ReceiverStatus.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DataDefinition.getDescriptor().getEnumTypes().get(5);
        }

        private static final ReceiverStatus[] VALUES = values();

        public static ReceiverStatus valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private ReceiverStatus(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:ReceiverStatus)
    }

    public interface G4DownloadOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // repeated .SensorGlucoseValueEntry sgv = 1;
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        java.util.List<DataDefinition.SensorGlucoseValueEntry>
        getSgvList();
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        DataDefinition.SensorGlucoseValueEntry getSgv(int index);
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        int getSgvCount();
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        java.util.List<? extends DataDefinition.SensorGlucoseValueEntryOrBuilder>
        getSgvOrBuilderList();
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        DataDefinition.SensorGlucoseValueEntryOrBuilder getSgvOrBuilder(
                int index);

        // optional .GlucoseUnit units = 2;
        /**
         * <code>optional .GlucoseUnit units = 2;</code>
         *
         * <pre>
         * Units reported by the device
         * </pre>
         */
        boolean hasUnits();
        /**
         * <code>optional .GlucoseUnit units = 2;</code>
         *
         * <pre>
         * Units reported by the device
         * </pre>
         */
        DataDefinition.GlucoseUnit getUnits();

        // required string download_timestamp = 3;
        /**
         * <code>required string download_timestamp = 3;</code>
         *
         * <pre>
         * ISO8601 timestamp reported by uploader
         * </pre>
         */
        boolean hasDownloadTimestamp();
        /**
         * <code>required string download_timestamp = 3;</code>
         *
         * <pre>
         * ISO8601 timestamp reported by uploader
         * </pre>
         */
        java.lang.String getDownloadTimestamp();
        /**
         * <code>required string download_timestamp = 3;</code>
         *
         * <pre>
         * ISO8601 timestamp reported by uploader
         * </pre>
         */
        com.google.protobuf.ByteString
        getDownloadTimestampBytes();

        // optional uint64 receiver_system_time_sec = 4;
        /**
         * <code>optional uint64 receiver_system_time_sec = 4;</code>
         *
         * <pre>
         * Raw value of the receiver's system time
         * </pre>
         */
        boolean hasReceiverSystemTimeSec();
        /**
         * <code>optional uint64 receiver_system_time_sec = 4;</code>
         *
         * <pre>
         * Raw value of the receiver's system time
         * </pre>
         */
        long getReceiverSystemTimeSec();

        // optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];
        /**
         * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
         *
         * <pre>
         * Status of the download
         * </pre>
         */
        boolean hasDownloadStatus();
        /**
         * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
         *
         * <pre>
         * Status of the download
         * </pre>
         */
        DataDefinition.DownloadStatus getDownloadStatus();

        // optional uint32 receiver_battery = 6;
        /**
         * <code>optional uint32 receiver_battery = 6;</code>
         *
         * <pre>
         * Battery level as reported by the receiver
         * </pre>
         */
        boolean hasReceiverBattery();
        /**
         * <code>optional uint32 receiver_battery = 6;</code>
         *
         * <pre>
         * Battery level as reported by the receiver
         * </pre>
         */
        int getReceiverBattery();

        // optional uint32 uploader_battery = 7;
        /**
         * <code>optional uint32 uploader_battery = 7;</code>
         *
         * <pre>
         * Battery level as reported by the uploader
         * </pre>
         */
        boolean hasUploaderBattery();
        /**
         * <code>optional uint32 uploader_battery = 7;</code>
         *
         * <pre>
         * Battery level as reported by the uploader
         * </pre>
         */
        int getUploaderBattery();

        // repeated .MeterEntry meter = 8;
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        java.util.List<DataDefinition.MeterEntry>
        getMeterList();
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        DataDefinition.MeterEntry getMeter(int index);
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        int getMeterCount();
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        java.util.List<? extends DataDefinition.MeterEntryOrBuilder>
        getMeterOrBuilderList();
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        DataDefinition.MeterEntryOrBuilder getMeterOrBuilder(
                int index);

        // repeated .SensorEntry sensor = 9;
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        java.util.List<DataDefinition.SensorEntry>
        getSensorList();
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        DataDefinition.SensorEntry getSensor(int index);
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        int getSensorCount();
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        java.util.List<? extends DataDefinition.SensorEntryOrBuilder>
        getSensorOrBuilderList();
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        DataDefinition.SensorEntryOrBuilder getSensorOrBuilder(
                int index);

        // repeated .CalibrationEntry cal = 10;
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        java.util.List<DataDefinition.CalibrationEntry>
        getCalList();
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        DataDefinition.CalibrationEntry getCal(int index);
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        int getCalCount();
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        java.util.List<? extends DataDefinition.CalibrationEntryOrBuilder>
        getCalOrBuilderList();
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        DataDefinition.CalibrationEntryOrBuilder getCalOrBuilder(
                int index);

        // repeated .InsertionEntry insert = 11;
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        java.util.List<DataDefinition.InsertionEntry>
        getInsertList();
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        DataDefinition.InsertionEntry getInsert(int index);
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        int getInsertCount();
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        java.util.List<? extends DataDefinition.InsertionEntryOrBuilder>
        getInsertOrBuilderList();
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        DataDefinition.InsertionEntryOrBuilder getInsertOrBuilder(
                int index);

        // optional string receiver_id = 12;
        /**
         * <code>optional string receiver_id = 12;</code>
         */
        boolean hasReceiverId();
        /**
         * <code>optional string receiver_id = 12;</code>
         */
        java.lang.String getReceiverId();
        /**
         * <code>optional string receiver_id = 12;</code>
         */
        com.google.protobuf.ByteString
        getReceiverIdBytes();

        // optional string transmitter_id = 13;
        /**
         * <code>optional string transmitter_id = 13;</code>
         */
        boolean hasTransmitterId();
        /**
         * <code>optional string transmitter_id = 13;</code>
         */
        java.lang.String getTransmitterId();
        /**
         * <code>optional string transmitter_id = 13;</code>
         */
        com.google.protobuf.ByteString
        getTransmitterIdBytes();
    }
    /**
     * Protobuf type {@code G4Download}
     */
    public static final class G4Download extends
            com.google.protobuf.GeneratedMessage
            implements G4DownloadOrBuilder {
        // Use G4Download.newBuilder() to construct.
        private G4Download(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private G4Download(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final G4Download defaultInstance;
        public static G4Download getDefaultInstance() {
            return defaultInstance;
        }

        public G4Download getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private G4Download(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                sgv_ = new java.util.ArrayList<DataDefinition.SensorGlucoseValueEntry>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            sgv_.add(input.readMessage(DataDefinition.SensorGlucoseValueEntry.PARSER, extensionRegistry));
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            DataDefinition.GlucoseUnit value = DataDefinition.GlucoseUnit.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                units_ = value;
                            }
                            break;
                        }
                        case 26: {
                            bitField0_ |= 0x00000002;
                            downloadTimestamp_ = input.readBytes();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000004;
                            receiverSystemTimeSec_ = input.readUInt64();
                            break;
                        }
                        case 40: {
                            int rawValue = input.readEnum();
                            DataDefinition.DownloadStatus value = DataDefinition.DownloadStatus.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(5, rawValue);
                            } else {
                                bitField0_ |= 0x00000008;
                                downloadStatus_ = value;
                            }
                            break;
                        }
                        case 48: {
                            bitField0_ |= 0x00000010;
                            receiverBattery_ = input.readUInt32();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000020;
                            uploaderBattery_ = input.readUInt32();
                            break;
                        }
                        case 66: {
                            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                                meter_ = new java.util.ArrayList<DataDefinition.MeterEntry>();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            meter_.add(input.readMessage(DataDefinition.MeterEntry.PARSER, extensionRegistry));
                            break;
                        }
                        case 74: {
                            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                                sensor_ = new java.util.ArrayList<DataDefinition.SensorEntry>();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            sensor_.add(input.readMessage(DataDefinition.SensorEntry.PARSER, extensionRegistry));
                            break;
                        }
                        case 82: {
                            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                                cal_ = new java.util.ArrayList<DataDefinition.CalibrationEntry>();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            cal_.add(input.readMessage(DataDefinition.CalibrationEntry.PARSER, extensionRegistry));
                            break;
                        }
                        case 90: {
                            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                                insert_ = new java.util.ArrayList<DataDefinition.InsertionEntry>();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            insert_.add(input.readMessage(DataDefinition.InsertionEntry.PARSER, extensionRegistry));
                            break;
                        }
                        case 98: {
                            bitField0_ |= 0x00000040;
                            receiverId_ = input.readBytes();
                            break;
                        }
                        case 106: {
                            bitField0_ |= 0x00000080;
                            transmitterId_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    sgv_ = java.util.Collections.unmodifiableList(sgv_);
                }
                if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    meter_ = java.util.Collections.unmodifiableList(meter_);
                }
                if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                    sensor_ = java.util.Collections.unmodifiableList(sensor_);
                }
                if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                    cal_ = java.util.Collections.unmodifiableList(cal_);
                }
                if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    insert_ = java.util.Collections.unmodifiableList(insert_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_G4Download_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_G4Download_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.G4Download.class, DataDefinition.G4Download.Builder.class);
        }

        public static com.google.protobuf.Parser<G4Download> PARSER =
                new com.google.protobuf.AbstractParser<G4Download>() {
                    public G4Download parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new G4Download(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<G4Download> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // repeated .SensorGlucoseValueEntry sgv = 1;
        public static final int SGV_FIELD_NUMBER = 1;
        private java.util.List<DataDefinition.SensorGlucoseValueEntry> sgv_;
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        public java.util.List<DataDefinition.SensorGlucoseValueEntry> getSgvList() {
            return sgv_;
        }
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        public java.util.List<? extends DataDefinition.SensorGlucoseValueEntryOrBuilder>
        getSgvOrBuilderList() {
            return sgv_;
        }
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        public int getSgvCount() {
            return sgv_.size();
        }
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        public DataDefinition.SensorGlucoseValueEntry getSgv(int index) {
            return sgv_.get(index);
        }
        /**
         * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
         *
         * <pre>
         * Glucose records as reported by the G4
         * </pre>
         */
        public DataDefinition.SensorGlucoseValueEntryOrBuilder getSgvOrBuilder(
                int index) {
            return sgv_.get(index);
        }

        // optional .GlucoseUnit units = 2;
        public static final int UNITS_FIELD_NUMBER = 2;
        private DataDefinition.GlucoseUnit units_;
        /**
         * <code>optional .GlucoseUnit units = 2;</code>
         *
         * <pre>
         * Units reported by the device
         * </pre>
         */
        public boolean hasUnits() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .GlucoseUnit units = 2;</code>
         *
         * <pre>
         * Units reported by the device
         * </pre>
         */
        public DataDefinition.GlucoseUnit getUnits() {
            return units_;
        }

        // required string download_timestamp = 3;
        public static final int DOWNLOAD_TIMESTAMP_FIELD_NUMBER = 3;
        private java.lang.Object downloadTimestamp_;
        /**
         * <code>required string download_timestamp = 3;</code>
         *
         * <pre>
         * ISO8601 timestamp reported by uploader
         * </pre>
         */
        public boolean hasDownloadTimestamp() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string download_timestamp = 3;</code>
         *
         * <pre>
         * ISO8601 timestamp reported by uploader
         * </pre>
         */
        public java.lang.String getDownloadTimestamp() {
            java.lang.Object ref = downloadTimestamp_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    downloadTimestamp_ = s;
                }
                return s;
            }
        }
        /**
         * <code>required string download_timestamp = 3;</code>
         *
         * <pre>
         * ISO8601 timestamp reported by uploader
         * </pre>
         */
        public com.google.protobuf.ByteString
        getDownloadTimestampBytes() {
            java.lang.Object ref = downloadTimestamp_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                downloadTimestamp_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional uint64 receiver_system_time_sec = 4;
        public static final int RECEIVER_SYSTEM_TIME_SEC_FIELD_NUMBER = 4;
        private long receiverSystemTimeSec_;
        /**
         * <code>optional uint64 receiver_system_time_sec = 4;</code>
         *
         * <pre>
         * Raw value of the receiver's system time
         * </pre>
         */
        public boolean hasReceiverSystemTimeSec() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 receiver_system_time_sec = 4;</code>
         *
         * <pre>
         * Raw value of the receiver's system time
         * </pre>
         */
        public long getReceiverSystemTimeSec() {
            return receiverSystemTimeSec_;
        }

        // optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];
        public static final int DOWNLOAD_STATUS_FIELD_NUMBER = 5;
        private DataDefinition.DownloadStatus downloadStatus_;
        /**
         * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
         *
         * <pre>
         * Status of the download
         * </pre>
         */
        public boolean hasDownloadStatus() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
         *
         * <pre>
         * Status of the download
         * </pre>
         */
        public DataDefinition.DownloadStatus getDownloadStatus() {
            return downloadStatus_;
        }

        // optional uint32 receiver_battery = 6;
        public static final int RECEIVER_BATTERY_FIELD_NUMBER = 6;
        private int receiverBattery_;
        /**
         * <code>optional uint32 receiver_battery = 6;</code>
         *
         * <pre>
         * Battery level as reported by the receiver
         * </pre>
         */
        public boolean hasReceiverBattery() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 receiver_battery = 6;</code>
         *
         * <pre>
         * Battery level as reported by the receiver
         * </pre>
         */
        public int getReceiverBattery() {
            return receiverBattery_;
        }

        // optional uint32 uploader_battery = 7;
        public static final int UPLOADER_BATTERY_FIELD_NUMBER = 7;
        private int uploaderBattery_;
        /**
         * <code>optional uint32 uploader_battery = 7;</code>
         *
         * <pre>
         * Battery level as reported by the uploader
         * </pre>
         */
        public boolean hasUploaderBattery() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 uploader_battery = 7;</code>
         *
         * <pre>
         * Battery level as reported by the uploader
         * </pre>
         */
        public int getUploaderBattery() {
            return uploaderBattery_;
        }

        // repeated .MeterEntry meter = 8;
        public static final int METER_FIELD_NUMBER = 8;
        private java.util.List<DataDefinition.MeterEntry> meter_;
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        public java.util.List<DataDefinition.MeterEntry> getMeterList() {
            return meter_;
        }
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        public java.util.List<? extends DataDefinition.MeterEntryOrBuilder>
        getMeterOrBuilderList() {
            return meter_;
        }
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        public int getMeterCount() {
            return meter_.size();
        }
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        public DataDefinition.MeterEntry getMeter(int index) {
            return meter_.get(index);
        }
        /**
         * <code>repeated .MeterEntry meter = 8;</code>
         */
        public DataDefinition.MeterEntryOrBuilder getMeterOrBuilder(
                int index) {
            return meter_.get(index);
        }

        // repeated .SensorEntry sensor = 9;
        public static final int SENSOR_FIELD_NUMBER = 9;
        private java.util.List<DataDefinition.SensorEntry> sensor_;
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        public java.util.List<DataDefinition.SensorEntry> getSensorList() {
            return sensor_;
        }
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        public java.util.List<? extends DataDefinition.SensorEntryOrBuilder>
        getSensorOrBuilderList() {
            return sensor_;
        }
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        public int getSensorCount() {
            return sensor_.size();
        }
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        public DataDefinition.SensorEntry getSensor(int index) {
            return sensor_.get(index);
        }
        /**
         * <code>repeated .SensorEntry sensor = 9;</code>
         */
        public DataDefinition.SensorEntryOrBuilder getSensorOrBuilder(
                int index) {
            return sensor_.get(index);
        }

        // repeated .CalibrationEntry cal = 10;
        public static final int CAL_FIELD_NUMBER = 10;
        private java.util.List<DataDefinition.CalibrationEntry> cal_;
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        public java.util.List<DataDefinition.CalibrationEntry> getCalList() {
            return cal_;
        }
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        public java.util.List<? extends DataDefinition.CalibrationEntryOrBuilder>
        getCalOrBuilderList() {
            return cal_;
        }
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        public int getCalCount() {
            return cal_.size();
        }
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        public DataDefinition.CalibrationEntry getCal(int index) {
            return cal_.get(index);
        }
        /**
         * <code>repeated .CalibrationEntry cal = 10;</code>
         */
        public DataDefinition.CalibrationEntryOrBuilder getCalOrBuilder(
                int index) {
            return cal_.get(index);
        }

        // repeated .InsertionEntry insert = 11;
        public static final int INSERT_FIELD_NUMBER = 11;
        private java.util.List<DataDefinition.InsertionEntry> insert_;
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        public java.util.List<DataDefinition.InsertionEntry> getInsertList() {
            return insert_;
        }
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        public java.util.List<? extends DataDefinition.InsertionEntryOrBuilder>
        getInsertOrBuilderList() {
            return insert_;
        }
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        public int getInsertCount() {
            return insert_.size();
        }
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        public DataDefinition.InsertionEntry getInsert(int index) {
            return insert_.get(index);
        }
        /**
         * <code>repeated .InsertionEntry insert = 11;</code>
         */
        public DataDefinition.InsertionEntryOrBuilder getInsertOrBuilder(
                int index) {
            return insert_.get(index);
        }

        // optional string receiver_id = 12;
        public static final int RECEIVER_ID_FIELD_NUMBER = 12;
        private java.lang.Object receiverId_;
        /**
         * <code>optional string receiver_id = 12;</code>
         */
        public boolean hasReceiverId() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string receiver_id = 12;</code>
         */
        public java.lang.String getReceiverId() {
            java.lang.Object ref = receiverId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    receiverId_ = s;
                }
                return s;
            }
        }
        /**
         * <code>optional string receiver_id = 12;</code>
         */
        public com.google.protobuf.ByteString
        getReceiverIdBytes() {
            java.lang.Object ref = receiverId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                receiverId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional string transmitter_id = 13;
        public static final int TRANSMITTER_ID_FIELD_NUMBER = 13;
        private java.lang.Object transmitterId_;
        /**
         * <code>optional string transmitter_id = 13;</code>
         */
        public boolean hasTransmitterId() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string transmitter_id = 13;</code>
         */
        public java.lang.String getTransmitterId() {
            java.lang.Object ref = transmitterId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    transmitterId_ = s;
                }
                return s;
            }
        }
        /**
         * <code>optional string transmitter_id = 13;</code>
         */
        public com.google.protobuf.ByteString
        getTransmitterIdBytes() {
            java.lang.Object ref = transmitterId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                transmitterId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            sgv_ = java.util.Collections.emptyList();
            units_ = DataDefinition.GlucoseUnit.MGDL;
            downloadTimestamp_ = "";
            receiverSystemTimeSec_ = 0L;
            downloadStatus_ = DataDefinition.DownloadStatus.NOT_APPLICABLE;
            receiverBattery_ = 0;
            uploaderBattery_ = 0;
            meter_ = java.util.Collections.emptyList();
            sensor_ = java.util.Collections.emptyList();
            cal_ = java.util.Collections.emptyList();
            insert_ = java.util.Collections.emptyList();
            receiverId_ = "";
            transmitterId_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasDownloadTimestamp()) {
                memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getSgvCount(); i++) {
                if (!getSgv(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            for (int i = 0; i < getMeterCount(); i++) {
                if (!getMeter(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            for (int i = 0; i < getSensorCount(); i++) {
                if (!getSensor(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            for (int i = 0; i < getCalCount(); i++) {
                if (!getCal(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            for (int i = 0; i < getInsertCount(); i++) {
                if (!getInsert(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < sgv_.size(); i++) {
                output.writeMessage(1, sgv_.get(i));
            }
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(2, units_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(3, getDownloadTimestampBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(4, receiverSystemTimeSec_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeEnum(5, downloadStatus_.getNumber());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(6, receiverBattery_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt32(7, uploaderBattery_);
            }
            for (int i = 0; i < meter_.size(); i++) {
                output.writeMessage(8, meter_.get(i));
            }
            for (int i = 0; i < sensor_.size(); i++) {
                output.writeMessage(9, sensor_.get(i));
            }
            for (int i = 0; i < cal_.size(); i++) {
                output.writeMessage(10, cal_.get(i));
            }
            for (int i = 0; i < insert_.size(); i++) {
                output.writeMessage(11, insert_.get(i));
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBytes(12, getReceiverIdBytes());
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeBytes(13, getTransmitterIdBytes());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < sgv_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, sgv_.get(i));
            }
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, units_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, getDownloadTimestampBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(4, receiverSystemTimeSec_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(5, downloadStatus_.getNumber());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, receiverBattery_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(7, uploaderBattery_);
            }
            for (int i = 0; i < meter_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, meter_.get(i));
            }
            for (int i = 0; i < sensor_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, sensor_.get(i));
            }
            for (int i = 0; i < cal_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(10, cal_.get(i));
            }
            for (int i = 0; i < insert_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(11, insert_.get(i));
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(12, getReceiverIdBytes());
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(13, getTransmitterIdBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.G4Download parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.G4Download parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.G4Download parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.G4Download parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.G4Download parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.G4Download parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.G4Download parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.G4Download parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.G4Download parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.G4Download parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.G4Download prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code G4Download}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.G4DownloadOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_G4Download_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_G4Download_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.G4Download.class, DataDefinition.G4Download.Builder.class);
            }

            // Construct using DataDefinition.G4Download.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getSgvFieldBuilder();
                    getMeterFieldBuilder();
                    getSensorFieldBuilder();
                    getCalFieldBuilder();
                    getInsertFieldBuilder();
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (sgvBuilder_ == null) {
                    sgv_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    sgvBuilder_.clear();
                }
                units_ = DataDefinition.GlucoseUnit.MGDL;
                bitField0_ = (bitField0_ & ~0x00000002);
                downloadTimestamp_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                receiverSystemTimeSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                downloadStatus_ = DataDefinition.DownloadStatus.NOT_APPLICABLE;
                bitField0_ = (bitField0_ & ~0x00000010);
                receiverBattery_ = 0;
                bitField0_ = (bitField0_ & ~0x00000020);
                uploaderBattery_ = 0;
                bitField0_ = (bitField0_ & ~0x00000040);
                if (meterBuilder_ == null) {
                    meter_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                } else {
                    meterBuilder_.clear();
                }
                if (sensorBuilder_ == null) {
                    sensor_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                } else {
                    sensorBuilder_.clear();
                }
                if (calBuilder_ == null) {
                    cal_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000200);
                } else {
                    calBuilder_.clear();
                }
                if (insertBuilder_ == null) {
                    insert_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000400);
                } else {
                    insertBuilder_.clear();
                }
                receiverId_ = "";
                bitField0_ = (bitField0_ & ~0x00000800);
                transmitterId_ = "";
                bitField0_ = (bitField0_ & ~0x00001000);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_G4Download_descriptor;
            }

            public DataDefinition.G4Download getDefaultInstanceForType() {
                return DataDefinition.G4Download.getDefaultInstance();
            }

            public DataDefinition.G4Download build() {
                DataDefinition.G4Download result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.G4Download buildPartial() {
                DataDefinition.G4Download result = new DataDefinition.G4Download(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (sgvBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        sgv_ = java.util.Collections.unmodifiableList(sgv_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.sgv_ = sgv_;
                } else {
                    result.sgv_ = sgvBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.units_ = units_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.downloadTimestamp_ = downloadTimestamp_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.receiverSystemTimeSec_ = receiverSystemTimeSec_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.downloadStatus_ = downloadStatus_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.receiverBattery_ = receiverBattery_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.uploaderBattery_ = uploaderBattery_;
                if (meterBuilder_ == null) {
                    if (((bitField0_ & 0x00000080) == 0x00000080)) {
                        meter_ = java.util.Collections.unmodifiableList(meter_);
                        bitField0_ = (bitField0_ & ~0x00000080);
                    }
                    result.meter_ = meter_;
                } else {
                    result.meter_ = meterBuilder_.build();
                }
                if (sensorBuilder_ == null) {
                    if (((bitField0_ & 0x00000100) == 0x00000100)) {
                        sensor_ = java.util.Collections.unmodifiableList(sensor_);
                        bitField0_ = (bitField0_ & ~0x00000100);
                    }
                    result.sensor_ = sensor_;
                } else {
                    result.sensor_ = sensorBuilder_.build();
                }
                if (calBuilder_ == null) {
                    if (((bitField0_ & 0x00000200) == 0x00000200)) {
                        cal_ = java.util.Collections.unmodifiableList(cal_);
                        bitField0_ = (bitField0_ & ~0x00000200);
                    }
                    result.cal_ = cal_;
                } else {
                    result.cal_ = calBuilder_.build();
                }
                if (insertBuilder_ == null) {
                    if (((bitField0_ & 0x00000400) == 0x00000400)) {
                        insert_ = java.util.Collections.unmodifiableList(insert_);
                        bitField0_ = (bitField0_ & ~0x00000400);
                    }
                    result.insert_ = insert_;
                } else {
                    result.insert_ = insertBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.receiverId_ = receiverId_;
                if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.transmitterId_ = transmitterId_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.G4Download) {
                    return mergeFrom((DataDefinition.G4Download)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.G4Download other) {
                if (other == DataDefinition.G4Download.getDefaultInstance()) return this;
                if (sgvBuilder_ == null) {
                    if (!other.sgv_.isEmpty()) {
                        if (sgv_.isEmpty()) {
                            sgv_ = other.sgv_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureSgvIsMutable();
                            sgv_.addAll(other.sgv_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.sgv_.isEmpty()) {
                        if (sgvBuilder_.isEmpty()) {
                            sgvBuilder_.dispose();
                            sgvBuilder_ = null;
                            sgv_ = other.sgv_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            sgvBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getSgvFieldBuilder() : null;
                        } else {
                            sgvBuilder_.addAllMessages(other.sgv_);
                        }
                    }
                }
                if (other.hasUnits()) {
                    setUnits(other.getUnits());
                }
                if (other.hasDownloadTimestamp()) {
                    bitField0_ |= 0x00000004;
                    downloadTimestamp_ = other.downloadTimestamp_;
                    onChanged();
                }
                if (other.hasReceiverSystemTimeSec()) {
                    setReceiverSystemTimeSec(other.getReceiverSystemTimeSec());
                }
                if (other.hasDownloadStatus()) {
                    setDownloadStatus(other.getDownloadStatus());
                }
                if (other.hasReceiverBattery()) {
                    setReceiverBattery(other.getReceiverBattery());
                }
                if (other.hasUploaderBattery()) {
                    setUploaderBattery(other.getUploaderBattery());
                }
                if (meterBuilder_ == null) {
                    if (!other.meter_.isEmpty()) {
                        if (meter_.isEmpty()) {
                            meter_ = other.meter_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                        } else {
                            ensureMeterIsMutable();
                            meter_.addAll(other.meter_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.meter_.isEmpty()) {
                        if (meterBuilder_.isEmpty()) {
                            meterBuilder_.dispose();
                            meterBuilder_ = null;
                            meter_ = other.meter_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                            meterBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getMeterFieldBuilder() : null;
                        } else {
                            meterBuilder_.addAllMessages(other.meter_);
                        }
                    }
                }
                if (sensorBuilder_ == null) {
                    if (!other.sensor_.isEmpty()) {
                        if (sensor_.isEmpty()) {
                            sensor_ = other.sensor_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                        } else {
                            ensureSensorIsMutable();
                            sensor_.addAll(other.sensor_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.sensor_.isEmpty()) {
                        if (sensorBuilder_.isEmpty()) {
                            sensorBuilder_.dispose();
                            sensorBuilder_ = null;
                            sensor_ = other.sensor_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                            sensorBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getSensorFieldBuilder() : null;
                        } else {
                            sensorBuilder_.addAllMessages(other.sensor_);
                        }
                    }
                }
                if (calBuilder_ == null) {
                    if (!other.cal_.isEmpty()) {
                        if (cal_.isEmpty()) {
                            cal_ = other.cal_;
                            bitField0_ = (bitField0_ & ~0x00000200);
                        } else {
                            ensureCalIsMutable();
                            cal_.addAll(other.cal_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.cal_.isEmpty()) {
                        if (calBuilder_.isEmpty()) {
                            calBuilder_.dispose();
                            calBuilder_ = null;
                            cal_ = other.cal_;
                            bitField0_ = (bitField0_ & ~0x00000200);
                            calBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getCalFieldBuilder() : null;
                        } else {
                            calBuilder_.addAllMessages(other.cal_);
                        }
                    }
                }
                if (insertBuilder_ == null) {
                    if (!other.insert_.isEmpty()) {
                        if (insert_.isEmpty()) {
                            insert_ = other.insert_;
                            bitField0_ = (bitField0_ & ~0x00000400);
                        } else {
                            ensureInsertIsMutable();
                            insert_.addAll(other.insert_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.insert_.isEmpty()) {
                        if (insertBuilder_.isEmpty()) {
                            insertBuilder_.dispose();
                            insertBuilder_ = null;
                            insert_ = other.insert_;
                            bitField0_ = (bitField0_ & ~0x00000400);
                            insertBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getInsertFieldBuilder() : null;
                        } else {
                            insertBuilder_.addAllMessages(other.insert_);
                        }
                    }
                }
                if (other.hasReceiverId()) {
                    bitField0_ |= 0x00000800;
                    receiverId_ = other.receiverId_;
                    onChanged();
                }
                if (other.hasTransmitterId()) {
                    bitField0_ |= 0x00001000;
                    transmitterId_ = other.transmitterId_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasDownloadTimestamp()) {

                    return false;
                }
                for (int i = 0; i < getSgvCount(); i++) {
                    if (!getSgv(i).isInitialized()) {

                        return false;
                    }
                }
                for (int i = 0; i < getMeterCount(); i++) {
                    if (!getMeter(i).isInitialized()) {

                        return false;
                    }
                }
                for (int i = 0; i < getSensorCount(); i++) {
                    if (!getSensor(i).isInitialized()) {

                        return false;
                    }
                }
                for (int i = 0; i < getCalCount(); i++) {
                    if (!getCal(i).isInitialized()) {

                        return false;
                    }
                }
                for (int i = 0; i < getInsertCount(); i++) {
                    if (!getInsert(i).isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.G4Download parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.G4Download) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // repeated .SensorGlucoseValueEntry sgv = 1;
            private java.util.List<DataDefinition.SensorGlucoseValueEntry> sgv_ =
                    java.util.Collections.emptyList();
            private void ensureSgvIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    sgv_ = new java.util.ArrayList<DataDefinition.SensorGlucoseValueEntry>(sgv_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.SensorGlucoseValueEntry, DataDefinition.SensorGlucoseValueEntry.Builder, DataDefinition.SensorGlucoseValueEntryOrBuilder> sgvBuilder_;

            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public java.util.List<DataDefinition.SensorGlucoseValueEntry> getSgvList() {
                if (sgvBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(sgv_);
                } else {
                    return sgvBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public int getSgvCount() {
                if (sgvBuilder_ == null) {
                    return sgv_.size();
                } else {
                    return sgvBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public DataDefinition.SensorGlucoseValueEntry getSgv(int index) {
                if (sgvBuilder_ == null) {
                    return sgv_.get(index);
                } else {
                    return sgvBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder setSgv(
                    int index, DataDefinition.SensorGlucoseValueEntry value) {
                if (sgvBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSgvIsMutable();
                    sgv_.set(index, value);
                    onChanged();
                } else {
                    sgvBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder setSgv(
                    int index, DataDefinition.SensorGlucoseValueEntry.Builder builderForValue) {
                if (sgvBuilder_ == null) {
                    ensureSgvIsMutable();
                    sgv_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    sgvBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder addSgv(DataDefinition.SensorGlucoseValueEntry value) {
                if (sgvBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSgvIsMutable();
                    sgv_.add(value);
                    onChanged();
                } else {
                    sgvBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder addSgv(
                    int index, DataDefinition.SensorGlucoseValueEntry value) {
                if (sgvBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSgvIsMutable();
                    sgv_.add(index, value);
                    onChanged();
                } else {
                    sgvBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder addSgv(
                    DataDefinition.SensorGlucoseValueEntry.Builder builderForValue) {
                if (sgvBuilder_ == null) {
                    ensureSgvIsMutable();
                    sgv_.add(builderForValue.build());
                    onChanged();
                } else {
                    sgvBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder addSgv(
                    int index, DataDefinition.SensorGlucoseValueEntry.Builder builderForValue) {
                if (sgvBuilder_ == null) {
                    ensureSgvIsMutable();
                    sgv_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    sgvBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder addAllSgv(
                    java.lang.Iterable<? extends DataDefinition.SensorGlucoseValueEntry> values) {
                if (sgvBuilder_ == null) {
                    ensureSgvIsMutable();
                    super.addAll(values, sgv_);
                    onChanged();
                } else {
                    sgvBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder clearSgv() {
                if (sgvBuilder_ == null) {
                    sgv_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    sgvBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public Builder removeSgv(int index) {
                if (sgvBuilder_ == null) {
                    ensureSgvIsMutable();
                    sgv_.remove(index);
                    onChanged();
                } else {
                    sgvBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public DataDefinition.SensorGlucoseValueEntry.Builder getSgvBuilder(
                    int index) {
                return getSgvFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public DataDefinition.SensorGlucoseValueEntryOrBuilder getSgvOrBuilder(
                    int index) {
                if (sgvBuilder_ == null) {
                    return sgv_.get(index);  } else {
                    return sgvBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public java.util.List<? extends DataDefinition.SensorGlucoseValueEntryOrBuilder>
            getSgvOrBuilderList() {
                if (sgvBuilder_ != null) {
                    return sgvBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(sgv_);
                }
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public DataDefinition.SensorGlucoseValueEntry.Builder addSgvBuilder() {
                return getSgvFieldBuilder().addBuilder(
                        DataDefinition.SensorGlucoseValueEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public DataDefinition.SensorGlucoseValueEntry.Builder addSgvBuilder(
                    int index) {
                return getSgvFieldBuilder().addBuilder(
                        index, DataDefinition.SensorGlucoseValueEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .SensorGlucoseValueEntry sgv = 1;</code>
             *
             * <pre>
             * Glucose records as reported by the G4
             * </pre>
             */
            public java.util.List<DataDefinition.SensorGlucoseValueEntry.Builder>
            getSgvBuilderList() {
                return getSgvFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.SensorGlucoseValueEntry, DataDefinition.SensorGlucoseValueEntry.Builder, DataDefinition.SensorGlucoseValueEntryOrBuilder>
            getSgvFieldBuilder() {
                if (sgvBuilder_ == null) {
                    sgvBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            DataDefinition.SensorGlucoseValueEntry, DataDefinition.SensorGlucoseValueEntry.Builder, DataDefinition.SensorGlucoseValueEntryOrBuilder>(
                            sgv_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    sgv_ = null;
                }
                return sgvBuilder_;
            }

            // optional .GlucoseUnit units = 2;
            private DataDefinition.GlucoseUnit units_ = DataDefinition.GlucoseUnit.MGDL;
            /**
             * <code>optional .GlucoseUnit units = 2;</code>
             *
             * <pre>
             * Units reported by the device
             * </pre>
             */
            public boolean hasUnits() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional .GlucoseUnit units = 2;</code>
             *
             * <pre>
             * Units reported by the device
             * </pre>
             */
            public DataDefinition.GlucoseUnit getUnits() {
                return units_;
            }
            /**
             * <code>optional .GlucoseUnit units = 2;</code>
             *
             * <pre>
             * Units reported by the device
             * </pre>
             */
            public Builder setUnits(DataDefinition.GlucoseUnit value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                units_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional .GlucoseUnit units = 2;</code>
             *
             * <pre>
             * Units reported by the device
             * </pre>
             */
            public Builder clearUnits() {
                bitField0_ = (bitField0_ & ~0x00000002);
                units_ = DataDefinition.GlucoseUnit.MGDL;
                onChanged();
                return this;
            }

            // required string download_timestamp = 3;
            private java.lang.Object downloadTimestamp_ = "";
            /**
             * <code>required string download_timestamp = 3;</code>
             *
             * <pre>
             * ISO8601 timestamp reported by uploader
             * </pre>
             */
            public boolean hasDownloadTimestamp() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required string download_timestamp = 3;</code>
             *
             * <pre>
             * ISO8601 timestamp reported by uploader
             * </pre>
             */
            public java.lang.String getDownloadTimestamp() {
                java.lang.Object ref = downloadTimestamp_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    downloadTimestamp_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>required string download_timestamp = 3;</code>
             *
             * <pre>
             * ISO8601 timestamp reported by uploader
             * </pre>
             */
            public com.google.protobuf.ByteString
            getDownloadTimestampBytes() {
                java.lang.Object ref = downloadTimestamp_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    downloadTimestamp_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>required string download_timestamp = 3;</code>
             *
             * <pre>
             * ISO8601 timestamp reported by uploader
             * </pre>
             */
            public Builder setDownloadTimestamp(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                downloadTimestamp_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required string download_timestamp = 3;</code>
             *
             * <pre>
             * ISO8601 timestamp reported by uploader
             * </pre>
             */
            public Builder clearDownloadTimestamp() {
                bitField0_ = (bitField0_ & ~0x00000004);
                downloadTimestamp_ = getDefaultInstance().getDownloadTimestamp();
                onChanged();
                return this;
            }
            /**
             * <code>required string download_timestamp = 3;</code>
             *
             * <pre>
             * ISO8601 timestamp reported by uploader
             * </pre>
             */
            public Builder setDownloadTimestampBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                downloadTimestamp_ = value;
                onChanged();
                return this;
            }

            // optional uint64 receiver_system_time_sec = 4;
            private long receiverSystemTimeSec_ ;
            /**
             * <code>optional uint64 receiver_system_time_sec = 4;</code>
             *
             * <pre>
             * Raw value of the receiver's system time
             * </pre>
             */
            public boolean hasReceiverSystemTimeSec() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional uint64 receiver_system_time_sec = 4;</code>
             *
             * <pre>
             * Raw value of the receiver's system time
             * </pre>
             */
            public long getReceiverSystemTimeSec() {
                return receiverSystemTimeSec_;
            }
            /**
             * <code>optional uint64 receiver_system_time_sec = 4;</code>
             *
             * <pre>
             * Raw value of the receiver's system time
             * </pre>
             */
            public Builder setReceiverSystemTimeSec(long value) {
                bitField0_ |= 0x00000008;
                receiverSystemTimeSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 receiver_system_time_sec = 4;</code>
             *
             * <pre>
             * Raw value of the receiver's system time
             * </pre>
             */
            public Builder clearReceiverSystemTimeSec() {
                bitField0_ = (bitField0_ & ~0x00000008);
                receiverSystemTimeSec_ = 0L;
                onChanged();
                return this;
            }

            // optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];
            private DataDefinition.DownloadStatus downloadStatus_ = DataDefinition.DownloadStatus.NOT_APPLICABLE;
            /**
             * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
             *
             * <pre>
             * Status of the download
             * </pre>
             */
            public boolean hasDownloadStatus() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
             *
             * <pre>
             * Status of the download
             * </pre>
             */
            public DataDefinition.DownloadStatus getDownloadStatus() {
                return downloadStatus_;
            }
            /**
             * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
             *
             * <pre>
             * Status of the download
             * </pre>
             */
            public Builder setDownloadStatus(DataDefinition.DownloadStatus value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                downloadStatus_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional .DownloadStatus download_status = 5 [default = NOT_APPLICABLE];</code>
             *
             * <pre>
             * Status of the download
             * </pre>
             */
            public Builder clearDownloadStatus() {
                bitField0_ = (bitField0_ & ~0x00000010);
                downloadStatus_ = DataDefinition.DownloadStatus.NOT_APPLICABLE;
                onChanged();
                return this;
            }

            // optional uint32 receiver_battery = 6;
            private int receiverBattery_ ;
            /**
             * <code>optional uint32 receiver_battery = 6;</code>
             *
             * <pre>
             * Battery level as reported by the receiver
             * </pre>
             */
            public boolean hasReceiverBattery() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }
            /**
             * <code>optional uint32 receiver_battery = 6;</code>
             *
             * <pre>
             * Battery level as reported by the receiver
             * </pre>
             */
            public int getReceiverBattery() {
                return receiverBattery_;
            }
            /**
             * <code>optional uint32 receiver_battery = 6;</code>
             *
             * <pre>
             * Battery level as reported by the receiver
             * </pre>
             */
            public Builder setReceiverBattery(int value) {
                bitField0_ |= 0x00000020;
                receiverBattery_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint32 receiver_battery = 6;</code>
             *
             * <pre>
             * Battery level as reported by the receiver
             * </pre>
             */
            public Builder clearReceiverBattery() {
                bitField0_ = (bitField0_ & ~0x00000020);
                receiverBattery_ = 0;
                onChanged();
                return this;
            }

            // optional uint32 uploader_battery = 7;
            private int uploaderBattery_ ;
            /**
             * <code>optional uint32 uploader_battery = 7;</code>
             *
             * <pre>
             * Battery level as reported by the uploader
             * </pre>
             */
            public boolean hasUploaderBattery() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }
            /**
             * <code>optional uint32 uploader_battery = 7;</code>
             *
             * <pre>
             * Battery level as reported by the uploader
             * </pre>
             */
            public int getUploaderBattery() {
                return uploaderBattery_;
            }
            /**
             * <code>optional uint32 uploader_battery = 7;</code>
             *
             * <pre>
             * Battery level as reported by the uploader
             * </pre>
             */
            public Builder setUploaderBattery(int value) {
                bitField0_ |= 0x00000040;
                uploaderBattery_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint32 uploader_battery = 7;</code>
             *
             * <pre>
             * Battery level as reported by the uploader
             * </pre>
             */
            public Builder clearUploaderBattery() {
                bitField0_ = (bitField0_ & ~0x00000040);
                uploaderBattery_ = 0;
                onChanged();
                return this;
            }

            // repeated .MeterEntry meter = 8;
            private java.util.List<DataDefinition.MeterEntry> meter_ =
                    java.util.Collections.emptyList();
            private void ensureMeterIsMutable() {
                if (!((bitField0_ & 0x00000080) == 0x00000080)) {
                    meter_ = new java.util.ArrayList<DataDefinition.MeterEntry>(meter_);
                    bitField0_ |= 0x00000080;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.MeterEntry, DataDefinition.MeterEntry.Builder, DataDefinition.MeterEntryOrBuilder> meterBuilder_;

            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public java.util.List<DataDefinition.MeterEntry> getMeterList() {
                if (meterBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(meter_);
                } else {
                    return meterBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public int getMeterCount() {
                if (meterBuilder_ == null) {
                    return meter_.size();
                } else {
                    return meterBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public DataDefinition.MeterEntry getMeter(int index) {
                if (meterBuilder_ == null) {
                    return meter_.get(index);
                } else {
                    return meterBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder setMeter(
                    int index, DataDefinition.MeterEntry value) {
                if (meterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMeterIsMutable();
                    meter_.set(index, value);
                    onChanged();
                } else {
                    meterBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder setMeter(
                    int index, DataDefinition.MeterEntry.Builder builderForValue) {
                if (meterBuilder_ == null) {
                    ensureMeterIsMutable();
                    meter_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    meterBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder addMeter(DataDefinition.MeterEntry value) {
                if (meterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMeterIsMutable();
                    meter_.add(value);
                    onChanged();
                } else {
                    meterBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder addMeter(
                    int index, DataDefinition.MeterEntry value) {
                if (meterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMeterIsMutable();
                    meter_.add(index, value);
                    onChanged();
                } else {
                    meterBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder addMeter(
                    DataDefinition.MeterEntry.Builder builderForValue) {
                if (meterBuilder_ == null) {
                    ensureMeterIsMutable();
                    meter_.add(builderForValue.build());
                    onChanged();
                } else {
                    meterBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder addMeter(
                    int index, DataDefinition.MeterEntry.Builder builderForValue) {
                if (meterBuilder_ == null) {
                    ensureMeterIsMutable();
                    meter_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    meterBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder addAllMeter(
                    java.lang.Iterable<? extends DataDefinition.MeterEntry> values) {
                if (meterBuilder_ == null) {
                    ensureMeterIsMutable();
                    super.addAll(values, meter_);
                    onChanged();
                } else {
                    meterBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder clearMeter() {
                if (meterBuilder_ == null) {
                    meter_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                    onChanged();
                } else {
                    meterBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public Builder removeMeter(int index) {
                if (meterBuilder_ == null) {
                    ensureMeterIsMutable();
                    meter_.remove(index);
                    onChanged();
                } else {
                    meterBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public DataDefinition.MeterEntry.Builder getMeterBuilder(
                    int index) {
                return getMeterFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public DataDefinition.MeterEntryOrBuilder getMeterOrBuilder(
                    int index) {
                if (meterBuilder_ == null) {
                    return meter_.get(index);  } else {
                    return meterBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public java.util.List<? extends DataDefinition.MeterEntryOrBuilder>
            getMeterOrBuilderList() {
                if (meterBuilder_ != null) {
                    return meterBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(meter_);
                }
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public DataDefinition.MeterEntry.Builder addMeterBuilder() {
                return getMeterFieldBuilder().addBuilder(
                        DataDefinition.MeterEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public DataDefinition.MeterEntry.Builder addMeterBuilder(
                    int index) {
                return getMeterFieldBuilder().addBuilder(
                        index, DataDefinition.MeterEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .MeterEntry meter = 8;</code>
             */
            public java.util.List<DataDefinition.MeterEntry.Builder>
            getMeterBuilderList() {
                return getMeterFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.MeterEntry, DataDefinition.MeterEntry.Builder, DataDefinition.MeterEntryOrBuilder>
            getMeterFieldBuilder() {
                if (meterBuilder_ == null) {
                    meterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            DataDefinition.MeterEntry, DataDefinition.MeterEntry.Builder, DataDefinition.MeterEntryOrBuilder>(
                            meter_,
                            ((bitField0_ & 0x00000080) == 0x00000080),
                            getParentForChildren(),
                            isClean());
                    meter_ = null;
                }
                return meterBuilder_;
            }

            // repeated .SensorEntry sensor = 9;
            private java.util.List<DataDefinition.SensorEntry> sensor_ =
                    java.util.Collections.emptyList();
            private void ensureSensorIsMutable() {
                if (!((bitField0_ & 0x00000100) == 0x00000100)) {
                    sensor_ = new java.util.ArrayList<DataDefinition.SensorEntry>(sensor_);
                    bitField0_ |= 0x00000100;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.SensorEntry, DataDefinition.SensorEntry.Builder, DataDefinition.SensorEntryOrBuilder> sensorBuilder_;

            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public java.util.List<DataDefinition.SensorEntry> getSensorList() {
                if (sensorBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(sensor_);
                } else {
                    return sensorBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public int getSensorCount() {
                if (sensorBuilder_ == null) {
                    return sensor_.size();
                } else {
                    return sensorBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public DataDefinition.SensorEntry getSensor(int index) {
                if (sensorBuilder_ == null) {
                    return sensor_.get(index);
                } else {
                    return sensorBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder setSensor(
                    int index, DataDefinition.SensorEntry value) {
                if (sensorBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSensorIsMutable();
                    sensor_.set(index, value);
                    onChanged();
                } else {
                    sensorBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder setSensor(
                    int index, DataDefinition.SensorEntry.Builder builderForValue) {
                if (sensorBuilder_ == null) {
                    ensureSensorIsMutable();
                    sensor_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    sensorBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder addSensor(DataDefinition.SensorEntry value) {
                if (sensorBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSensorIsMutable();
                    sensor_.add(value);
                    onChanged();
                } else {
                    sensorBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder addSensor(
                    int index, DataDefinition.SensorEntry value) {
                if (sensorBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSensorIsMutable();
                    sensor_.add(index, value);
                    onChanged();
                } else {
                    sensorBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder addSensor(
                    DataDefinition.SensorEntry.Builder builderForValue) {
                if (sensorBuilder_ == null) {
                    ensureSensorIsMutable();
                    sensor_.add(builderForValue.build());
                    onChanged();
                } else {
                    sensorBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder addSensor(
                    int index, DataDefinition.SensorEntry.Builder builderForValue) {
                if (sensorBuilder_ == null) {
                    ensureSensorIsMutable();
                    sensor_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    sensorBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder addAllSensor(
                    java.lang.Iterable<? extends DataDefinition.SensorEntry> values) {
                if (sensorBuilder_ == null) {
                    ensureSensorIsMutable();
                    super.addAll(values, sensor_);
                    onChanged();
                } else {
                    sensorBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder clearSensor() {
                if (sensorBuilder_ == null) {
                    sensor_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                    onChanged();
                } else {
                    sensorBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public Builder removeSensor(int index) {
                if (sensorBuilder_ == null) {
                    ensureSensorIsMutable();
                    sensor_.remove(index);
                    onChanged();
                } else {
                    sensorBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public DataDefinition.SensorEntry.Builder getSensorBuilder(
                    int index) {
                return getSensorFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public DataDefinition.SensorEntryOrBuilder getSensorOrBuilder(
                    int index) {
                if (sensorBuilder_ == null) {
                    return sensor_.get(index);  } else {
                    return sensorBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public java.util.List<? extends DataDefinition.SensorEntryOrBuilder>
            getSensorOrBuilderList() {
                if (sensorBuilder_ != null) {
                    return sensorBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(sensor_);
                }
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public DataDefinition.SensorEntry.Builder addSensorBuilder() {
                return getSensorFieldBuilder().addBuilder(
                        DataDefinition.SensorEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public DataDefinition.SensorEntry.Builder addSensorBuilder(
                    int index) {
                return getSensorFieldBuilder().addBuilder(
                        index, DataDefinition.SensorEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .SensorEntry sensor = 9;</code>
             */
            public java.util.List<DataDefinition.SensorEntry.Builder>
            getSensorBuilderList() {
                return getSensorFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.SensorEntry, DataDefinition.SensorEntry.Builder, DataDefinition.SensorEntryOrBuilder>
            getSensorFieldBuilder() {
                if (sensorBuilder_ == null) {
                    sensorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            DataDefinition.SensorEntry, DataDefinition.SensorEntry.Builder, DataDefinition.SensorEntryOrBuilder>(
                            sensor_,
                            ((bitField0_ & 0x00000100) == 0x00000100),
                            getParentForChildren(),
                            isClean());
                    sensor_ = null;
                }
                return sensorBuilder_;
            }

            // repeated .CalibrationEntry cal = 10;
            private java.util.List<DataDefinition.CalibrationEntry> cal_ =
                    java.util.Collections.emptyList();
            private void ensureCalIsMutable() {
                if (!((bitField0_ & 0x00000200) == 0x00000200)) {
                    cal_ = new java.util.ArrayList<DataDefinition.CalibrationEntry>(cal_);
                    bitField0_ |= 0x00000200;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.CalibrationEntry, DataDefinition.CalibrationEntry.Builder, DataDefinition.CalibrationEntryOrBuilder> calBuilder_;

            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public java.util.List<DataDefinition.CalibrationEntry> getCalList() {
                if (calBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(cal_);
                } else {
                    return calBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public int getCalCount() {
                if (calBuilder_ == null) {
                    return cal_.size();
                } else {
                    return calBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public DataDefinition.CalibrationEntry getCal(int index) {
                if (calBuilder_ == null) {
                    return cal_.get(index);
                } else {
                    return calBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder setCal(
                    int index, DataDefinition.CalibrationEntry value) {
                if (calBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCalIsMutable();
                    cal_.set(index, value);
                    onChanged();
                } else {
                    calBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder setCal(
                    int index, DataDefinition.CalibrationEntry.Builder builderForValue) {
                if (calBuilder_ == null) {
                    ensureCalIsMutable();
                    cal_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    calBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder addCal(DataDefinition.CalibrationEntry value) {
                if (calBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCalIsMutable();
                    cal_.add(value);
                    onChanged();
                } else {
                    calBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder addCal(
                    int index, DataDefinition.CalibrationEntry value) {
                if (calBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCalIsMutable();
                    cal_.add(index, value);
                    onChanged();
                } else {
                    calBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder addCal(
                    DataDefinition.CalibrationEntry.Builder builderForValue) {
                if (calBuilder_ == null) {
                    ensureCalIsMutable();
                    cal_.add(builderForValue.build());
                    onChanged();
                } else {
                    calBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder addCal(
                    int index, DataDefinition.CalibrationEntry.Builder builderForValue) {
                if (calBuilder_ == null) {
                    ensureCalIsMutable();
                    cal_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    calBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder addAllCal(
                    java.lang.Iterable<? extends DataDefinition.CalibrationEntry> values) {
                if (calBuilder_ == null) {
                    ensureCalIsMutable();
                    super.addAll(values, cal_);
                    onChanged();
                } else {
                    calBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder clearCal() {
                if (calBuilder_ == null) {
                    cal_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000200);
                    onChanged();
                } else {
                    calBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public Builder removeCal(int index) {
                if (calBuilder_ == null) {
                    ensureCalIsMutable();
                    cal_.remove(index);
                    onChanged();
                } else {
                    calBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public DataDefinition.CalibrationEntry.Builder getCalBuilder(
                    int index) {
                return getCalFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public DataDefinition.CalibrationEntryOrBuilder getCalOrBuilder(
                    int index) {
                if (calBuilder_ == null) {
                    return cal_.get(index);  } else {
                    return calBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public java.util.List<? extends DataDefinition.CalibrationEntryOrBuilder>
            getCalOrBuilderList() {
                if (calBuilder_ != null) {
                    return calBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(cal_);
                }
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public DataDefinition.CalibrationEntry.Builder addCalBuilder() {
                return getCalFieldBuilder().addBuilder(
                        DataDefinition.CalibrationEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public DataDefinition.CalibrationEntry.Builder addCalBuilder(
                    int index) {
                return getCalFieldBuilder().addBuilder(
                        index, DataDefinition.CalibrationEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .CalibrationEntry cal = 10;</code>
             */
            public java.util.List<DataDefinition.CalibrationEntry.Builder>
            getCalBuilderList() {
                return getCalFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.CalibrationEntry, DataDefinition.CalibrationEntry.Builder, DataDefinition.CalibrationEntryOrBuilder>
            getCalFieldBuilder() {
                if (calBuilder_ == null) {
                    calBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            DataDefinition.CalibrationEntry, DataDefinition.CalibrationEntry.Builder, DataDefinition.CalibrationEntryOrBuilder>(
                            cal_,
                            ((bitField0_ & 0x00000200) == 0x00000200),
                            getParentForChildren(),
                            isClean());
                    cal_ = null;
                }
                return calBuilder_;
            }

            // repeated .InsertionEntry insert = 11;
            private java.util.List<DataDefinition.InsertionEntry> insert_ =
                    java.util.Collections.emptyList();
            private void ensureInsertIsMutable() {
                if (!((bitField0_ & 0x00000400) == 0x00000400)) {
                    insert_ = new java.util.ArrayList<DataDefinition.InsertionEntry>(insert_);
                    bitField0_ |= 0x00000400;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.InsertionEntry, DataDefinition.InsertionEntry.Builder, DataDefinition.InsertionEntryOrBuilder> insertBuilder_;

            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public java.util.List<DataDefinition.InsertionEntry> getInsertList() {
                if (insertBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(insert_);
                } else {
                    return insertBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public int getInsertCount() {
                if (insertBuilder_ == null) {
                    return insert_.size();
                } else {
                    return insertBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public DataDefinition.InsertionEntry getInsert(int index) {
                if (insertBuilder_ == null) {
                    return insert_.get(index);
                } else {
                    return insertBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder setInsert(
                    int index, DataDefinition.InsertionEntry value) {
                if (insertBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInsertIsMutable();
                    insert_.set(index, value);
                    onChanged();
                } else {
                    insertBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder setInsert(
                    int index, DataDefinition.InsertionEntry.Builder builderForValue) {
                if (insertBuilder_ == null) {
                    ensureInsertIsMutable();
                    insert_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    insertBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder addInsert(DataDefinition.InsertionEntry value) {
                if (insertBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInsertIsMutable();
                    insert_.add(value);
                    onChanged();
                } else {
                    insertBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder addInsert(
                    int index, DataDefinition.InsertionEntry value) {
                if (insertBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInsertIsMutable();
                    insert_.add(index, value);
                    onChanged();
                } else {
                    insertBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder addInsert(
                    DataDefinition.InsertionEntry.Builder builderForValue) {
                if (insertBuilder_ == null) {
                    ensureInsertIsMutable();
                    insert_.add(builderForValue.build());
                    onChanged();
                } else {
                    insertBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder addInsert(
                    int index, DataDefinition.InsertionEntry.Builder builderForValue) {
                if (insertBuilder_ == null) {
                    ensureInsertIsMutable();
                    insert_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    insertBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder addAllInsert(
                    java.lang.Iterable<? extends DataDefinition.InsertionEntry> values) {
                if (insertBuilder_ == null) {
                    ensureInsertIsMutable();
                    super.addAll(values, insert_);
                    onChanged();
                } else {
                    insertBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder clearInsert() {
                if (insertBuilder_ == null) {
                    insert_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000400);
                    onChanged();
                } else {
                    insertBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public Builder removeInsert(int index) {
                if (insertBuilder_ == null) {
                    ensureInsertIsMutable();
                    insert_.remove(index);
                    onChanged();
                } else {
                    insertBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public DataDefinition.InsertionEntry.Builder getInsertBuilder(
                    int index) {
                return getInsertFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public DataDefinition.InsertionEntryOrBuilder getInsertOrBuilder(
                    int index) {
                if (insertBuilder_ == null) {
                    return insert_.get(index);  } else {
                    return insertBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public java.util.List<? extends DataDefinition.InsertionEntryOrBuilder>
            getInsertOrBuilderList() {
                if (insertBuilder_ != null) {
                    return insertBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(insert_);
                }
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public DataDefinition.InsertionEntry.Builder addInsertBuilder() {
                return getInsertFieldBuilder().addBuilder(
                        DataDefinition.InsertionEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public DataDefinition.InsertionEntry.Builder addInsertBuilder(
                    int index) {
                return getInsertFieldBuilder().addBuilder(
                        index, DataDefinition.InsertionEntry.getDefaultInstance());
            }
            /**
             * <code>repeated .InsertionEntry insert = 11;</code>
             */
            public java.util.List<DataDefinition.InsertionEntry.Builder>
            getInsertBuilderList() {
                return getInsertFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                    DataDefinition.InsertionEntry, DataDefinition.InsertionEntry.Builder, DataDefinition.InsertionEntryOrBuilder>
            getInsertFieldBuilder() {
                if (insertBuilder_ == null) {
                    insertBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            DataDefinition.InsertionEntry, DataDefinition.InsertionEntry.Builder, DataDefinition.InsertionEntryOrBuilder>(
                            insert_,
                            ((bitField0_ & 0x00000400) == 0x00000400),
                            getParentForChildren(),
                            isClean());
                    insert_ = null;
                }
                return insertBuilder_;
            }

            // optional string receiver_id = 12;
            private java.lang.Object receiverId_ = "";
            /**
             * <code>optional string receiver_id = 12;</code>
             */
            public boolean hasReceiverId() {
                return ((bitField0_ & 0x00000800) == 0x00000800);
            }
            /**
             * <code>optional string receiver_id = 12;</code>
             */
            public java.lang.String getReceiverId() {
                java.lang.Object ref = receiverId_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    receiverId_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>optional string receiver_id = 12;</code>
             */
            public com.google.protobuf.ByteString
            getReceiverIdBytes() {
                java.lang.Object ref = receiverId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    receiverId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string receiver_id = 12;</code>
             */
            public Builder setReceiverId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000800;
                receiverId_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string receiver_id = 12;</code>
             */
            public Builder clearReceiverId() {
                bitField0_ = (bitField0_ & ~0x00000800);
                receiverId_ = getDefaultInstance().getReceiverId();
                onChanged();
                return this;
            }
            /**
             * <code>optional string receiver_id = 12;</code>
             */
            public Builder setReceiverIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000800;
                receiverId_ = value;
                onChanged();
                return this;
            }

            // optional string transmitter_id = 13;
            private java.lang.Object transmitterId_ = "";
            /**
             * <code>optional string transmitter_id = 13;</code>
             */
            public boolean hasTransmitterId() {
                return ((bitField0_ & 0x00001000) == 0x00001000);
            }
            /**
             * <code>optional string transmitter_id = 13;</code>
             */
            public java.lang.String getTransmitterId() {
                java.lang.Object ref = transmitterId_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    transmitterId_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>optional string transmitter_id = 13;</code>
             */
            public com.google.protobuf.ByteString
            getTransmitterIdBytes() {
                java.lang.Object ref = transmitterId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    transmitterId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string transmitter_id = 13;</code>
             */
            public Builder setTransmitterId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00001000;
                transmitterId_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string transmitter_id = 13;</code>
             */
            public Builder clearTransmitterId() {
                bitField0_ = (bitField0_ & ~0x00001000);
                transmitterId_ = getDefaultInstance().getTransmitterId();
                onChanged();
                return this;
            }
            /**
             * <code>optional string transmitter_id = 13;</code>
             */
            public Builder setTransmitterIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00001000;
                transmitterId_ = value;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:G4Download)
        }

        static {
            defaultInstance = new G4Download(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:G4Download)
    }

    public interface SensorGlucoseValueEntryOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required uint32 sgv_mgdl = 1;
        /**
         * <code>required uint32 sgv_mgdl = 1;</code>
         *
         * <pre>
         * Sensor Glucose Value
         * </pre>
         */
        boolean hasSgvMgdl();
        /**
         * <code>required uint32 sgv_mgdl = 1;</code>
         *
         * <pre>
         * Sensor Glucose Value
         * </pre>
         */
        int getSgvMgdl();

        // optional uint64 sys_timestamp_sec = 2;
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        boolean hasSysTimestampSec();
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        long getSysTimestampSec();

        // optional uint64 disp_timestamp_sec = 3;
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        boolean hasDispTimestampSec();
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        long getDispTimestampSec();

        // optional .G4Trend trend = 4;
        /**
         * <code>optional .G4Trend trend = 4;</code>
         *
         * <pre>
         * G4 Glucose trend arrow
         * </pre>
         */
        boolean hasTrend();
        /**
         * <code>optional .G4Trend trend = 4;</code>
         *
         * <pre>
         * G4 Glucose trend arrow
         * </pre>
         */
        DataDefinition.G4Trend getTrend();

        // optional .G4Noise noise = 5;
        /**
         * <code>optional .G4Noise noise = 5;</code>
         *
         * <pre>
         * Noise level that potentially affects the G4 sensor readings
         * </pre>
         */
        boolean hasNoise();
        /**
         * <code>optional .G4Noise noise = 5;</code>
         *
         * <pre>
         * Noise level that potentially affects the G4 sensor readings
         * </pre>
         */
        DataDefinition.G4Noise getNoise();
    }
    /**
     * Protobuf type {@code SensorGlucoseValueEntry}
     */
    public static final class SensorGlucoseValueEntry extends
            com.google.protobuf.GeneratedMessage
            implements SensorGlucoseValueEntryOrBuilder {
        // Use SensorGlucoseValueEntry.newBuilder() to construct.
        private SensorGlucoseValueEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private SensorGlucoseValueEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SensorGlucoseValueEntry defaultInstance;
        public static SensorGlucoseValueEntry getDefaultInstance() {
            return defaultInstance;
        }

        public SensorGlucoseValueEntry getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private SensorGlucoseValueEntry(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            sgvMgdl_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            sysTimestampSec_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            dispTimestampSec_ = input.readUInt64();
                            break;
                        }
                        case 32: {
                            int rawValue = input.readEnum();
                            DataDefinition.G4Trend value = DataDefinition.G4Trend.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(4, rawValue);
                            } else {
                                bitField0_ |= 0x00000008;
                                trend_ = value;
                            }
                            break;
                        }
                        case 40: {
                            int rawValue = input.readEnum();
                            DataDefinition.G4Noise value = DataDefinition.G4Noise.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(5, rawValue);
                            } else {
                                bitField0_ |= 0x00000010;
                                noise_ = value;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_SensorGlucoseValueEntry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_SensorGlucoseValueEntry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.SensorGlucoseValueEntry.class, DataDefinition.SensorGlucoseValueEntry.Builder.class);
        }

        public static com.google.protobuf.Parser<SensorGlucoseValueEntry> PARSER =
                new com.google.protobuf.AbstractParser<SensorGlucoseValueEntry>() {
                    public SensorGlucoseValueEntry parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SensorGlucoseValueEntry(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SensorGlucoseValueEntry> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required uint32 sgv_mgdl = 1;
        public static final int SGV_MGDL_FIELD_NUMBER = 1;
        private int sgvMgdl_;
        /**
         * <code>required uint32 sgv_mgdl = 1;</code>
         *
         * <pre>
         * Sensor Glucose Value
         * </pre>
         */
        public boolean hasSgvMgdl() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint32 sgv_mgdl = 1;</code>
         *
         * <pre>
         * Sensor Glucose Value
         * </pre>
         */
        public int getSgvMgdl() {
            return sgvMgdl_;
        }

        // optional uint64 sys_timestamp_sec = 2;
        public static final int SYS_TIMESTAMP_SEC_FIELD_NUMBER = 2;
        private long sysTimestampSec_;
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public boolean hasSysTimestampSec() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public long getSysTimestampSec() {
            return sysTimestampSec_;
        }

        // optional uint64 disp_timestamp_sec = 3;
        public static final int DISP_TIMESTAMP_SEC_FIELD_NUMBER = 3;
        private long dispTimestampSec_;
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public boolean hasDispTimestampSec() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public long getDispTimestampSec() {
            return dispTimestampSec_;
        }

        // optional .G4Trend trend = 4;
        public static final int TREND_FIELD_NUMBER = 4;
        private DataDefinition.G4Trend trend_;
        /**
         * <code>optional .G4Trend trend = 4;</code>
         *
         * <pre>
         * G4 Glucose trend arrow
         * </pre>
         */
        public boolean hasTrend() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .G4Trend trend = 4;</code>
         *
         * <pre>
         * G4 Glucose trend arrow
         * </pre>
         */
        public DataDefinition.G4Trend getTrend() {
            return trend_;
        }

        // optional .G4Noise noise = 5;
        public static final int NOISE_FIELD_NUMBER = 5;
        private DataDefinition.G4Noise noise_;
        /**
         * <code>optional .G4Noise noise = 5;</code>
         *
         * <pre>
         * Noise level that potentially affects the G4 sensor readings
         * </pre>
         */
        public boolean hasNoise() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .G4Noise noise = 5;</code>
         *
         * <pre>
         * Noise level that potentially affects the G4 sensor readings
         * </pre>
         */
        public DataDefinition.G4Noise getNoise() {
            return noise_;
        }

        private void initFields() {
            sgvMgdl_ = 0;
            sysTimestampSec_ = 0L;
            dispTimestampSec_ = 0L;
            trend_ = DataDefinition.G4Trend.TREND_NONE;
            noise_ = DataDefinition.G4Noise.NOISE_NONE;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasSgvMgdl()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, sgvMgdl_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, dispTimestampSec_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeEnum(4, trend_.getNumber());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeEnum(5, noise_.getNumber());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, sgvMgdl_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, dispTimestampSec_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(4, trend_.getNumber());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(5, noise_.getNumber());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.SensorGlucoseValueEntry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.SensorGlucoseValueEntry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.SensorGlucoseValueEntry prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SensorGlucoseValueEntry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.SensorGlucoseValueEntryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_SensorGlucoseValueEntry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_SensorGlucoseValueEntry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.SensorGlucoseValueEntry.class, DataDefinition.SensorGlucoseValueEntry.Builder.class);
            }

            // Construct using DataDefinition.SensorGlucoseValueEntry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                sgvMgdl_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                sysTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                dispTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                trend_ = DataDefinition.G4Trend.TREND_NONE;
                bitField0_ = (bitField0_ & ~0x00000008);
                noise_ = DataDefinition.G4Noise.NOISE_NONE;
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_SensorGlucoseValueEntry_descriptor;
            }

            public DataDefinition.SensorGlucoseValueEntry getDefaultInstanceForType() {
                return DataDefinition.SensorGlucoseValueEntry.getDefaultInstance();
            }

            public DataDefinition.SensorGlucoseValueEntry build() {
                DataDefinition.SensorGlucoseValueEntry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.SensorGlucoseValueEntry buildPartial() {
                DataDefinition.SensorGlucoseValueEntry result = new DataDefinition.SensorGlucoseValueEntry(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.sgvMgdl_ = sgvMgdl_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.sysTimestampSec_ = sysTimestampSec_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.dispTimestampSec_ = dispTimestampSec_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.trend_ = trend_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.noise_ = noise_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.SensorGlucoseValueEntry) {
                    return mergeFrom((DataDefinition.SensorGlucoseValueEntry)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.SensorGlucoseValueEntry other) {
                if (other == DataDefinition.SensorGlucoseValueEntry.getDefaultInstance()) return this;
                if (other.hasSgvMgdl()) {
                    setSgvMgdl(other.getSgvMgdl());
                }
                if (other.hasSysTimestampSec()) {
                    setSysTimestampSec(other.getSysTimestampSec());
                }
                if (other.hasDispTimestampSec()) {
                    setDispTimestampSec(other.getDispTimestampSec());
                }
                if (other.hasTrend()) {
                    setTrend(other.getTrend());
                }
                if (other.hasNoise()) {
                    setNoise(other.getNoise());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasSgvMgdl()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.SensorGlucoseValueEntry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.SensorGlucoseValueEntry) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required uint32 sgv_mgdl = 1;
            private int sgvMgdl_ ;
            /**
             * <code>required uint32 sgv_mgdl = 1;</code>
             *
             * <pre>
             * Sensor Glucose Value
             * </pre>
             */
            public boolean hasSgvMgdl() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required uint32 sgv_mgdl = 1;</code>
             *
             * <pre>
             * Sensor Glucose Value
             * </pre>
             */
            public int getSgvMgdl() {
                return sgvMgdl_;
            }
            /**
             * <code>required uint32 sgv_mgdl = 1;</code>
             *
             * <pre>
             * Sensor Glucose Value
             * </pre>
             */
            public Builder setSgvMgdl(int value) {
                bitField0_ |= 0x00000001;
                sgvMgdl_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required uint32 sgv_mgdl = 1;</code>
             *
             * <pre>
             * Sensor Glucose Value
             * </pre>
             */
            public Builder clearSgvMgdl() {
                bitField0_ = (bitField0_ & ~0x00000001);
                sgvMgdl_ = 0;
                onChanged();
                return this;
            }

            // optional uint64 sys_timestamp_sec = 2;
            private long sysTimestampSec_ ;
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public boolean hasSysTimestampSec() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public long getSysTimestampSec() {
                return sysTimestampSec_;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder setSysTimestampSec(long value) {
                bitField0_ |= 0x00000002;
                sysTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder clearSysTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000002);
                sysTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // optional uint64 disp_timestamp_sec = 3;
            private long dispTimestampSec_ ;
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public boolean hasDispTimestampSec() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public long getDispTimestampSec() {
                return dispTimestampSec_;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder setDispTimestampSec(long value) {
                bitField0_ |= 0x00000004;
                dispTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder clearDispTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000004);
                dispTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // optional .G4Trend trend = 4;
            private DataDefinition.G4Trend trend_ = DataDefinition.G4Trend.TREND_NONE;
            /**
             * <code>optional .G4Trend trend = 4;</code>
             *
             * <pre>
             * G4 Glucose trend arrow
             * </pre>
             */
            public boolean hasTrend() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional .G4Trend trend = 4;</code>
             *
             * <pre>
             * G4 Glucose trend arrow
             * </pre>
             */
            public DataDefinition.G4Trend getTrend() {
                return trend_;
            }
            /**
             * <code>optional .G4Trend trend = 4;</code>
             *
             * <pre>
             * G4 Glucose trend arrow
             * </pre>
             */
            public Builder setTrend(DataDefinition.G4Trend value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                trend_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional .G4Trend trend = 4;</code>
             *
             * <pre>
             * G4 Glucose trend arrow
             * </pre>
             */
            public Builder clearTrend() {
                bitField0_ = (bitField0_ & ~0x00000008);
                trend_ = DataDefinition.G4Trend.TREND_NONE;
                onChanged();
                return this;
            }

            // optional .G4Noise noise = 5;
            private DataDefinition.G4Noise noise_ = DataDefinition.G4Noise.NOISE_NONE;
            /**
             * <code>optional .G4Noise noise = 5;</code>
             *
             * <pre>
             * Noise level that potentially affects the G4 sensor readings
             * </pre>
             */
            public boolean hasNoise() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional .G4Noise noise = 5;</code>
             *
             * <pre>
             * Noise level that potentially affects the G4 sensor readings
             * </pre>
             */
            public DataDefinition.G4Noise getNoise() {
                return noise_;
            }
            /**
             * <code>optional .G4Noise noise = 5;</code>
             *
             * <pre>
             * Noise level that potentially affects the G4 sensor readings
             * </pre>
             */
            public Builder setNoise(DataDefinition.G4Noise value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                noise_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional .G4Noise noise = 5;</code>
             *
             * <pre>
             * Noise level that potentially affects the G4 sensor readings
             * </pre>
             */
            public Builder clearNoise() {
                bitField0_ = (bitField0_ & ~0x00000010);
                noise_ = DataDefinition.G4Noise.NOISE_NONE;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:SensorGlucoseValueEntry)
        }

        static {
            defaultInstance = new SensorGlucoseValueEntry(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SensorGlucoseValueEntry)
    }

    public interface MeterEntryOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required uint32 meter_bg_mgdl = 1;
        /**
         * <code>required uint32 meter_bg_mgdl = 1;</code>
         */
        boolean hasMeterBgMgdl();
        /**
         * <code>required uint32 meter_bg_mgdl = 1;</code>
         */
        int getMeterBgMgdl();

        // optional uint32 meter_time = 2;
        /**
         * <code>optional uint32 meter_time = 2;</code>
         */
        boolean hasMeterTime();
        /**
         * <code>optional uint32 meter_time = 2;</code>
         */
        int getMeterTime();

        // optional uint64 sys_timestamp_sec = 3;
        /**
         * <code>optional uint64 sys_timestamp_sec = 3;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        boolean hasSysTimestampSec();
        /**
         * <code>optional uint64 sys_timestamp_sec = 3;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        long getSysTimestampSec();

        // optional uint64 disp_timestamp_sec = 4;
        /**
         * <code>optional uint64 disp_timestamp_sec = 4;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        boolean hasDispTimestampSec();
        /**
         * <code>optional uint64 disp_timestamp_sec = 4;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        long getDispTimestampSec();
    }
    /**
     * Protobuf type {@code MeterEntry}
     */
    public static final class MeterEntry extends
            com.google.protobuf.GeneratedMessage
            implements MeterEntryOrBuilder {
        // Use MeterEntry.newBuilder() to construct.
        private MeterEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private MeterEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MeterEntry defaultInstance;
        public static MeterEntry getDefaultInstance() {
            return defaultInstance;
        }

        public MeterEntry getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private MeterEntry(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            meterBgMgdl_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            meterTime_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            sysTimestampSec_ = input.readUInt64();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            dispTimestampSec_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_MeterEntry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_MeterEntry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.MeterEntry.class, DataDefinition.MeterEntry.Builder.class);
        }

        public static com.google.protobuf.Parser<MeterEntry> PARSER =
                new com.google.protobuf.AbstractParser<MeterEntry>() {
                    public MeterEntry parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new MeterEntry(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<MeterEntry> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required uint32 meter_bg_mgdl = 1;
        public static final int METER_BG_MGDL_FIELD_NUMBER = 1;
        private int meterBgMgdl_;
        /**
         * <code>required uint32 meter_bg_mgdl = 1;</code>
         */
        public boolean hasMeterBgMgdl() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint32 meter_bg_mgdl = 1;</code>
         */
        public int getMeterBgMgdl() {
            return meterBgMgdl_;
        }

        // optional uint32 meter_time = 2;
        public static final int METER_TIME_FIELD_NUMBER = 2;
        private int meterTime_;
        /**
         * <code>optional uint32 meter_time = 2;</code>
         */
        public boolean hasMeterTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 meter_time = 2;</code>
         */
        public int getMeterTime() {
            return meterTime_;
        }

        // optional uint64 sys_timestamp_sec = 3;
        public static final int SYS_TIMESTAMP_SEC_FIELD_NUMBER = 3;
        private long sysTimestampSec_;
        /**
         * <code>optional uint64 sys_timestamp_sec = 3;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public boolean hasSysTimestampSec() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 sys_timestamp_sec = 3;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public long getSysTimestampSec() {
            return sysTimestampSec_;
        }

        // optional uint64 disp_timestamp_sec = 4;
        public static final int DISP_TIMESTAMP_SEC_FIELD_NUMBER = 4;
        private long dispTimestampSec_;
        /**
         * <code>optional uint64 disp_timestamp_sec = 4;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public boolean hasDispTimestampSec() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 disp_timestamp_sec = 4;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public long getDispTimestampSec() {
            return dispTimestampSec_;
        }

        private void initFields() {
            meterBgMgdl_ = 0;
            meterTime_ = 0;
            sysTimestampSec_ = 0L;
            dispTimestampSec_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasMeterBgMgdl()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, meterBgMgdl_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, meterTime_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt64(4, dispTimestampSec_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, meterBgMgdl_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, meterTime_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(4, dispTimestampSec_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.MeterEntry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.MeterEntry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.MeterEntry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.MeterEntry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.MeterEntry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.MeterEntry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.MeterEntry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.MeterEntry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.MeterEntry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.MeterEntry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.MeterEntry prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code MeterEntry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.MeterEntryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_MeterEntry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_MeterEntry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.MeterEntry.class, DataDefinition.MeterEntry.Builder.class);
            }

            // Construct using DataDefinition.MeterEntry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                meterBgMgdl_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                meterTime_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                sysTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                dispTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_MeterEntry_descriptor;
            }

            public DataDefinition.MeterEntry getDefaultInstanceForType() {
                return DataDefinition.MeterEntry.getDefaultInstance();
            }

            public DataDefinition.MeterEntry build() {
                DataDefinition.MeterEntry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.MeterEntry buildPartial() {
                DataDefinition.MeterEntry result = new DataDefinition.MeterEntry(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.meterBgMgdl_ = meterBgMgdl_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.meterTime_ = meterTime_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.sysTimestampSec_ = sysTimestampSec_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.dispTimestampSec_ = dispTimestampSec_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.MeterEntry) {
                    return mergeFrom((DataDefinition.MeterEntry)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.MeterEntry other) {
                if (other == DataDefinition.MeterEntry.getDefaultInstance()) return this;
                if (other.hasMeterBgMgdl()) {
                    setMeterBgMgdl(other.getMeterBgMgdl());
                }
                if (other.hasMeterTime()) {
                    setMeterTime(other.getMeterTime());
                }
                if (other.hasSysTimestampSec()) {
                    setSysTimestampSec(other.getSysTimestampSec());
                }
                if (other.hasDispTimestampSec()) {
                    setDispTimestampSec(other.getDispTimestampSec());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasMeterBgMgdl()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.MeterEntry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.MeterEntry) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required uint32 meter_bg_mgdl = 1;
            private int meterBgMgdl_ ;
            /**
             * <code>required uint32 meter_bg_mgdl = 1;</code>
             */
            public boolean hasMeterBgMgdl() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required uint32 meter_bg_mgdl = 1;</code>
             */
            public int getMeterBgMgdl() {
                return meterBgMgdl_;
            }
            /**
             * <code>required uint32 meter_bg_mgdl = 1;</code>
             */
            public Builder setMeterBgMgdl(int value) {
                bitField0_ |= 0x00000001;
                meterBgMgdl_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required uint32 meter_bg_mgdl = 1;</code>
             */
            public Builder clearMeterBgMgdl() {
                bitField0_ = (bitField0_ & ~0x00000001);
                meterBgMgdl_ = 0;
                onChanged();
                return this;
            }

            // optional uint32 meter_time = 2;
            private int meterTime_ ;
            /**
             * <code>optional uint32 meter_time = 2;</code>
             */
            public boolean hasMeterTime() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional uint32 meter_time = 2;</code>
             */
            public int getMeterTime() {
                return meterTime_;
            }
            /**
             * <code>optional uint32 meter_time = 2;</code>
             */
            public Builder setMeterTime(int value) {
                bitField0_ |= 0x00000002;
                meterTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint32 meter_time = 2;</code>
             */
            public Builder clearMeterTime() {
                bitField0_ = (bitField0_ & ~0x00000002);
                meterTime_ = 0;
                onChanged();
                return this;
            }

            // optional uint64 sys_timestamp_sec = 3;
            private long sysTimestampSec_ ;
            /**
             * <code>optional uint64 sys_timestamp_sec = 3;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public boolean hasSysTimestampSec() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 3;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public long getSysTimestampSec() {
                return sysTimestampSec_;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 3;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder setSysTimestampSec(long value) {
                bitField0_ |= 0x00000004;
                sysTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 3;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder clearSysTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000004);
                sysTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // optional uint64 disp_timestamp_sec = 4;
            private long dispTimestampSec_ ;
            /**
             * <code>optional uint64 disp_timestamp_sec = 4;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public boolean hasDispTimestampSec() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 4;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public long getDispTimestampSec() {
                return dispTimestampSec_;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 4;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder setDispTimestampSec(long value) {
                bitField0_ |= 0x00000008;
                dispTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 4;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder clearDispTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000008);
                dispTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:MeterEntry)
        }

        static {
            defaultInstance = new MeterEntry(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:MeterEntry)
    }

    public interface SensorEntryOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required uint64 filtered = 1;
        /**
         * <code>required uint64 filtered = 1;</code>
         */
        boolean hasFiltered();
        /**
         * <code>required uint64 filtered = 1;</code>
         */
        long getFiltered();

        // optional uint64 unfiltered = 2;
        /**
         * <code>optional uint64 unfiltered = 2;</code>
         */
        boolean hasUnfiltered();
        /**
         * <code>optional uint64 unfiltered = 2;</code>
         */
        long getUnfiltered();

        // optional uint32 rssi = 3;
        /**
         * <code>optional uint32 rssi = 3;</code>
         */
        boolean hasRssi();
        /**
         * <code>optional uint32 rssi = 3;</code>
         */
        int getRssi();

        // optional uint64 sys_timestamp_sec = 4;
        /**
         * <code>optional uint64 sys_timestamp_sec = 4;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        boolean hasSysTimestampSec();
        /**
         * <code>optional uint64 sys_timestamp_sec = 4;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        long getSysTimestampSec();

        // optional uint64 disp_timestamp_sec = 5;
        /**
         * <code>optional uint64 disp_timestamp_sec = 5;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        boolean hasDispTimestampSec();
        /**
         * <code>optional uint64 disp_timestamp_sec = 5;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        long getDispTimestampSec();
    }
    /**
     * Protobuf type {@code SensorEntry}
     */
    public static final class SensorEntry extends
            com.google.protobuf.GeneratedMessage
            implements SensorEntryOrBuilder {
        // Use SensorEntry.newBuilder() to construct.
        private SensorEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private SensorEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SensorEntry defaultInstance;
        public static SensorEntry getDefaultInstance() {
            return defaultInstance;
        }

        public SensorEntry getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private SensorEntry(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            filtered_ = input.readUInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            unfiltered_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            rssi_ = input.readUInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            sysTimestampSec_ = input.readUInt64();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            dispTimestampSec_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_SensorEntry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_SensorEntry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.SensorEntry.class, DataDefinition.SensorEntry.Builder.class);
        }

        public static com.google.protobuf.Parser<SensorEntry> PARSER =
                new com.google.protobuf.AbstractParser<SensorEntry>() {
                    public SensorEntry parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SensorEntry(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SensorEntry> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required uint64 filtered = 1;
        public static final int FILTERED_FIELD_NUMBER = 1;
        private long filtered_;
        /**
         * <code>required uint64 filtered = 1;</code>
         */
        public boolean hasFiltered() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 filtered = 1;</code>
         */
        public long getFiltered() {
            return filtered_;
        }

        // optional uint64 unfiltered = 2;
        public static final int UNFILTERED_FIELD_NUMBER = 2;
        private long unfiltered_;
        /**
         * <code>optional uint64 unfiltered = 2;</code>
         */
        public boolean hasUnfiltered() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 unfiltered = 2;</code>
         */
        public long getUnfiltered() {
            return unfiltered_;
        }

        // optional uint32 rssi = 3;
        public static final int RSSI_FIELD_NUMBER = 3;
        private int rssi_;
        /**
         * <code>optional uint32 rssi = 3;</code>
         */
        public boolean hasRssi() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 rssi = 3;</code>
         */
        public int getRssi() {
            return rssi_;
        }

        // optional uint64 sys_timestamp_sec = 4;
        public static final int SYS_TIMESTAMP_SEC_FIELD_NUMBER = 4;
        private long sysTimestampSec_;
        /**
         * <code>optional uint64 sys_timestamp_sec = 4;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public boolean hasSysTimestampSec() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 sys_timestamp_sec = 4;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public long getSysTimestampSec() {
            return sysTimestampSec_;
        }

        // optional uint64 disp_timestamp_sec = 5;
        public static final int DISP_TIMESTAMP_SEC_FIELD_NUMBER = 5;
        private long dispTimestampSec_;
        /**
         * <code>optional uint64 disp_timestamp_sec = 5;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public boolean hasDispTimestampSec() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint64 disp_timestamp_sec = 5;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public long getDispTimestampSec() {
            return dispTimestampSec_;
        }

        private void initFields() {
            filtered_ = 0L;
            unfiltered_ = 0L;
            rssi_ = 0;
            sysTimestampSec_ = 0L;
            dispTimestampSec_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasFiltered()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, filtered_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, unfiltered_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, rssi_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt64(4, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt64(5, dispTimestampSec_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(1, filtered_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, unfiltered_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, rssi_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(4, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(5, dispTimestampSec_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.SensorEntry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.SensorEntry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.SensorEntry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.SensorEntry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.SensorEntry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.SensorEntry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.SensorEntry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.SensorEntry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.SensorEntry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.SensorEntry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.SensorEntry prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code SensorEntry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.SensorEntryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_SensorEntry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_SensorEntry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.SensorEntry.class, DataDefinition.SensorEntry.Builder.class);
            }

            // Construct using DataDefinition.SensorEntry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                filtered_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                unfiltered_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                rssi_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                sysTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                dispTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_SensorEntry_descriptor;
            }

            public DataDefinition.SensorEntry getDefaultInstanceForType() {
                return DataDefinition.SensorEntry.getDefaultInstance();
            }

            public DataDefinition.SensorEntry build() {
                DataDefinition.SensorEntry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.SensorEntry buildPartial() {
                DataDefinition.SensorEntry result = new DataDefinition.SensorEntry(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.filtered_ = filtered_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.unfiltered_ = unfiltered_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.rssi_ = rssi_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.sysTimestampSec_ = sysTimestampSec_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.dispTimestampSec_ = dispTimestampSec_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.SensorEntry) {
                    return mergeFrom((DataDefinition.SensorEntry)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.SensorEntry other) {
                if (other == DataDefinition.SensorEntry.getDefaultInstance()) return this;
                if (other.hasFiltered()) {
                    setFiltered(other.getFiltered());
                }
                if (other.hasUnfiltered()) {
                    setUnfiltered(other.getUnfiltered());
                }
                if (other.hasRssi()) {
                    setRssi(other.getRssi());
                }
                if (other.hasSysTimestampSec()) {
                    setSysTimestampSec(other.getSysTimestampSec());
                }
                if (other.hasDispTimestampSec()) {
                    setDispTimestampSec(other.getDispTimestampSec());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasFiltered()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.SensorEntry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.SensorEntry) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required uint64 filtered = 1;
            private long filtered_ ;
            /**
             * <code>required uint64 filtered = 1;</code>
             */
            public boolean hasFiltered() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required uint64 filtered = 1;</code>
             */
            public long getFiltered() {
                return filtered_;
            }
            /**
             * <code>required uint64 filtered = 1;</code>
             */
            public Builder setFiltered(long value) {
                bitField0_ |= 0x00000001;
                filtered_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required uint64 filtered = 1;</code>
             */
            public Builder clearFiltered() {
                bitField0_ = (bitField0_ & ~0x00000001);
                filtered_ = 0L;
                onChanged();
                return this;
            }

            // optional uint64 unfiltered = 2;
            private long unfiltered_ ;
            /**
             * <code>optional uint64 unfiltered = 2;</code>
             */
            public boolean hasUnfiltered() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional uint64 unfiltered = 2;</code>
             */
            public long getUnfiltered() {
                return unfiltered_;
            }
            /**
             * <code>optional uint64 unfiltered = 2;</code>
             */
            public Builder setUnfiltered(long value) {
                bitField0_ |= 0x00000002;
                unfiltered_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 unfiltered = 2;</code>
             */
            public Builder clearUnfiltered() {
                bitField0_ = (bitField0_ & ~0x00000002);
                unfiltered_ = 0L;
                onChanged();
                return this;
            }

            // optional uint32 rssi = 3;
            private int rssi_ ;
            /**
             * <code>optional uint32 rssi = 3;</code>
             */
            public boolean hasRssi() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional uint32 rssi = 3;</code>
             */
            public int getRssi() {
                return rssi_;
            }
            /**
             * <code>optional uint32 rssi = 3;</code>
             */
            public Builder setRssi(int value) {
                bitField0_ |= 0x00000004;
                rssi_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint32 rssi = 3;</code>
             */
            public Builder clearRssi() {
                bitField0_ = (bitField0_ & ~0x00000004);
                rssi_ = 0;
                onChanged();
                return this;
            }

            // optional uint64 sys_timestamp_sec = 4;
            private long sysTimestampSec_ ;
            /**
             * <code>optional uint64 sys_timestamp_sec = 4;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public boolean hasSysTimestampSec() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 4;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public long getSysTimestampSec() {
                return sysTimestampSec_;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 4;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder setSysTimestampSec(long value) {
                bitField0_ |= 0x00000008;
                sysTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 4;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder clearSysTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000008);
                sysTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // optional uint64 disp_timestamp_sec = 5;
            private long dispTimestampSec_ ;
            /**
             * <code>optional uint64 disp_timestamp_sec = 5;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public boolean hasDispTimestampSec() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 5;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public long getDispTimestampSec() {
                return dispTimestampSec_;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 5;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder setDispTimestampSec(long value) {
                bitField0_ |= 0x00000010;
                dispTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 5;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder clearDispTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000010);
                dispTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:SensorEntry)
        }

        static {
            defaultInstance = new SensorEntry(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:SensorEntry)
    }

    public interface InsertionEntryOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required .G4Insertion state = 1;
        /**
         * <code>required .G4Insertion state = 1;</code>
         */
        boolean hasState();
        /**
         * <code>required .G4Insertion state = 1;</code>
         */
        DataDefinition.G4Insertion getState();

        // optional uint64 sys_timestamp_sec = 2;
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        boolean hasSysTimestampSec();
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        long getSysTimestampSec();

        // optional uint64 disp_timestamp_sec = 3;
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        boolean hasDispTimestampSec();
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        long getDispTimestampSec();
    }
    /**
     * Protobuf type {@code InsertionEntry}
     */
    public static final class InsertionEntry extends
            com.google.protobuf.GeneratedMessage
            implements InsertionEntryOrBuilder {
        // Use InsertionEntry.newBuilder() to construct.
        private InsertionEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private InsertionEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final InsertionEntry defaultInstance;
        public static InsertionEntry getDefaultInstance() {
            return defaultInstance;
        }

        public InsertionEntry getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private InsertionEntry(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            DataDefinition.G4Insertion value = DataDefinition.G4Insertion.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                state_ = value;
                            }
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            sysTimestampSec_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            dispTimestampSec_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_InsertionEntry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_InsertionEntry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.InsertionEntry.class, DataDefinition.InsertionEntry.Builder.class);
        }

        public static com.google.protobuf.Parser<InsertionEntry> PARSER =
                new com.google.protobuf.AbstractParser<InsertionEntry>() {
                    public InsertionEntry parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new InsertionEntry(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<InsertionEntry> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required .G4Insertion state = 1;
        public static final int STATE_FIELD_NUMBER = 1;
        private DataDefinition.G4Insertion state_;
        /**
         * <code>required .G4Insertion state = 1;</code>
         */
        public boolean hasState() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .G4Insertion state = 1;</code>
         */
        public DataDefinition.G4Insertion getState() {
            return state_;
        }

        // optional uint64 sys_timestamp_sec = 2;
        public static final int SYS_TIMESTAMP_SEC_FIELD_NUMBER = 2;
        private long sysTimestampSec_;
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public boolean hasSysTimestampSec() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 sys_timestamp_sec = 2;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public long getSysTimestampSec() {
            return sysTimestampSec_;
        }

        // optional uint64 disp_timestamp_sec = 3;
        public static final int DISP_TIMESTAMP_SEC_FIELD_NUMBER = 3;
        private long dispTimestampSec_;
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public boolean hasDispTimestampSec() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 disp_timestamp_sec = 3;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public long getDispTimestampSec() {
            return dispTimestampSec_;
        }

        private void initFields() {
            state_ = DataDefinition.G4Insertion.INSERTION_NONE;
            sysTimestampSec_ = 0L;
            dispTimestampSec_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasState()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, state_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, dispTimestampSec_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, state_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, dispTimestampSec_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.InsertionEntry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.InsertionEntry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.InsertionEntry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.InsertionEntry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.InsertionEntry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.InsertionEntry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.InsertionEntry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.InsertionEntry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.InsertionEntry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.InsertionEntry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.InsertionEntry prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code InsertionEntry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.InsertionEntryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_InsertionEntry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_InsertionEntry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.InsertionEntry.class, DataDefinition.InsertionEntry.Builder.class);
            }

            // Construct using DataDefinition.InsertionEntry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                state_ = DataDefinition.G4Insertion.INSERTION_NONE;
                bitField0_ = (bitField0_ & ~0x00000001);
                sysTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                dispTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_InsertionEntry_descriptor;
            }

            public DataDefinition.InsertionEntry getDefaultInstanceForType() {
                return DataDefinition.InsertionEntry.getDefaultInstance();
            }

            public DataDefinition.InsertionEntry build() {
                DataDefinition.InsertionEntry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.InsertionEntry buildPartial() {
                DataDefinition.InsertionEntry result = new DataDefinition.InsertionEntry(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.state_ = state_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.sysTimestampSec_ = sysTimestampSec_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.dispTimestampSec_ = dispTimestampSec_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.InsertionEntry) {
                    return mergeFrom((DataDefinition.InsertionEntry)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.InsertionEntry other) {
                if (other == DataDefinition.InsertionEntry.getDefaultInstance()) return this;
                if (other.hasState()) {
                    setState(other.getState());
                }
                if (other.hasSysTimestampSec()) {
                    setSysTimestampSec(other.getSysTimestampSec());
                }
                if (other.hasDispTimestampSec()) {
                    setDispTimestampSec(other.getDispTimestampSec());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasState()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.InsertionEntry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.InsertionEntry) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required .G4Insertion state = 1;
            private DataDefinition.G4Insertion state_ = DataDefinition.G4Insertion.INSERTION_NONE;
            /**
             * <code>required .G4Insertion state = 1;</code>
             */
            public boolean hasState() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .G4Insertion state = 1;</code>
             */
            public DataDefinition.G4Insertion getState() {
                return state_;
            }
            /**
             * <code>required .G4Insertion state = 1;</code>
             */
            public Builder setState(DataDefinition.G4Insertion value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                state_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required .G4Insertion state = 1;</code>
             */
            public Builder clearState() {
                bitField0_ = (bitField0_ & ~0x00000001);
                state_ = DataDefinition.G4Insertion.INSERTION_NONE;
                onChanged();
                return this;
            }

            // optional uint64 sys_timestamp_sec = 2;
            private long sysTimestampSec_ ;
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public boolean hasSysTimestampSec() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public long getSysTimestampSec() {
                return sysTimestampSec_;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder setSysTimestampSec(long value) {
                bitField0_ |= 0x00000002;
                sysTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 2;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder clearSysTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000002);
                sysTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // optional uint64 disp_timestamp_sec = 3;
            private long dispTimestampSec_ ;
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public boolean hasDispTimestampSec() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public long getDispTimestampSec() {
                return dispTimestampSec_;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder setDispTimestampSec(long value) {
                bitField0_ |= 0x00000004;
                dispTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 3;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder clearDispTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000004);
                dispTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:InsertionEntry)
        }

        static {
            defaultInstance = new InsertionEntry(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:InsertionEntry)
    }

    public interface CalibrationEntryOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required double slope = 1;
        /**
         * <code>required double slope = 1;</code>
         */
        boolean hasSlope();
        /**
         * <code>required double slope = 1;</code>
         */
        double getSlope();

        // optional double intercept = 2;
        /**
         * <code>optional double intercept = 2;</code>
         */
        boolean hasIntercept();
        /**
         * <code>optional double intercept = 2;</code>
         */
        double getIntercept();

        // optional double scale = 3;
        /**
         * <code>optional double scale = 3;</code>
         */
        boolean hasScale();
        /**
         * <code>optional double scale = 3;</code>
         */
        double getScale();

        // optional double decay = 4;
        /**
         * <code>optional double decay = 4;</code>
         */
        boolean hasDecay();
        /**
         * <code>optional double decay = 4;</code>
         */
        double getDecay();

        // optional uint64 sys_timestamp_sec = 5;
        /**
         * <code>optional uint64 sys_timestamp_sec = 5;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        boolean hasSysTimestampSec();
        /**
         * <code>optional uint64 sys_timestamp_sec = 5;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        long getSysTimestampSec();

        // optional uint64 disp_timestamp_sec = 6;
        /**
         * <code>optional uint64 disp_timestamp_sec = 6;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        boolean hasDispTimestampSec();
        /**
         * <code>optional uint64 disp_timestamp_sec = 6;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        long getDispTimestampSec();
    }
    /**
     * Protobuf type {@code CalibrationEntry}
     */
    public static final class CalibrationEntry extends
            com.google.protobuf.GeneratedMessage
            implements CalibrationEntryOrBuilder {
        // Use CalibrationEntry.newBuilder() to construct.
        private CalibrationEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private CalibrationEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final CalibrationEntry defaultInstance;
        public static CalibrationEntry getDefaultInstance() {
            return defaultInstance;
        }

        public CalibrationEntry getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private CalibrationEntry(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 9: {
                            bitField0_ |= 0x00000001;
                            slope_ = input.readDouble();
                            break;
                        }
                        case 17: {
                            bitField0_ |= 0x00000002;
                            intercept_ = input.readDouble();
                            break;
                        }
                        case 25: {
                            bitField0_ |= 0x00000004;
                            scale_ = input.readDouble();
                            break;
                        }
                        case 33: {
                            bitField0_ |= 0x00000008;
                            decay_ = input.readDouble();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            sysTimestampSec_ = input.readUInt64();
                            break;
                        }
                        case 48: {
                            bitField0_ |= 0x00000020;
                            dispTimestampSec_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_CalibrationEntry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_CalibrationEntry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.CalibrationEntry.class, DataDefinition.CalibrationEntry.Builder.class);
        }

        public static com.google.protobuf.Parser<CalibrationEntry> PARSER =
                new com.google.protobuf.AbstractParser<CalibrationEntry>() {
                    public CalibrationEntry parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CalibrationEntry(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<CalibrationEntry> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required double slope = 1;
        public static final int SLOPE_FIELD_NUMBER = 1;
        private double slope_;
        /**
         * <code>required double slope = 1;</code>
         */
        public boolean hasSlope() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required double slope = 1;</code>
         */
        public double getSlope() {
            return slope_;
        }

        // optional double intercept = 2;
        public static final int INTERCEPT_FIELD_NUMBER = 2;
        private double intercept_;
        /**
         * <code>optional double intercept = 2;</code>
         */
        public boolean hasIntercept() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double intercept = 2;</code>
         */
        public double getIntercept() {
            return intercept_;
        }

        // optional double scale = 3;
        public static final int SCALE_FIELD_NUMBER = 3;
        private double scale_;
        /**
         * <code>optional double scale = 3;</code>
         */
        public boolean hasScale() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double scale = 3;</code>
         */
        public double getScale() {
            return scale_;
        }

        // optional double decay = 4;
        public static final int DECAY_FIELD_NUMBER = 4;
        private double decay_;
        /**
         * <code>optional double decay = 4;</code>
         */
        public boolean hasDecay() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double decay = 4;</code>
         */
        public double getDecay() {
            return decay_;
        }

        // optional uint64 sys_timestamp_sec = 5;
        public static final int SYS_TIMESTAMP_SEC_FIELD_NUMBER = 5;
        private long sysTimestampSec_;
        /**
         * <code>optional uint64 sys_timestamp_sec = 5;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public boolean hasSysTimestampSec() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint64 sys_timestamp_sec = 5;</code>
         *
         * <pre>
         * System timestamp - Timestamp representing the internal clock of the receiver
         * </pre>
         */
        public long getSysTimestampSec() {
            return sysTimestampSec_;
        }

        // optional uint64 disp_timestamp_sec = 6;
        public static final int DISP_TIMESTAMP_SEC_FIELD_NUMBER = 6;
        private long dispTimestampSec_;
        /**
         * <code>optional uint64 disp_timestamp_sec = 6;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public boolean hasDispTimestampSec() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint64 disp_timestamp_sec = 6;</code>
         *
         * <pre>
         * Display timestamp - Timestamp representing the user configured time displayed on the receiver
         * </pre>
         */
        public long getDispTimestampSec() {
            return dispTimestampSec_;
        }

        private void initFields() {
            slope_ = 0D;
            intercept_ = 0D;
            scale_ = 0D;
            decay_ = 0D;
            sysTimestampSec_ = 0L;
            dispTimestampSec_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasSlope()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeDouble(1, slope_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeDouble(2, intercept_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeDouble(3, scale_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeDouble(4, decay_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt64(5, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt64(6, dispTimestampSec_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(1, slope_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(2, intercept_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(3, scale_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(4, decay_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(5, sysTimestampSec_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(6, dispTimestampSec_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.CalibrationEntry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.CalibrationEntry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.CalibrationEntry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.CalibrationEntry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.CalibrationEntry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.CalibrationEntry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.CalibrationEntry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.CalibrationEntry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.CalibrationEntry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.CalibrationEntry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.CalibrationEntry prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code CalibrationEntry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.CalibrationEntryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_CalibrationEntry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_CalibrationEntry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.CalibrationEntry.class, DataDefinition.CalibrationEntry.Builder.class);
            }

            // Construct using DataDefinition.CalibrationEntry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                slope_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000001);
                intercept_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000002);
                scale_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000004);
                decay_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000008);
                sysTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                dispTimestampSec_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_CalibrationEntry_descriptor;
            }

            public DataDefinition.CalibrationEntry getDefaultInstanceForType() {
                return DataDefinition.CalibrationEntry.getDefaultInstance();
            }

            public DataDefinition.CalibrationEntry build() {
                DataDefinition.CalibrationEntry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.CalibrationEntry buildPartial() {
                DataDefinition.CalibrationEntry result = new DataDefinition.CalibrationEntry(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.slope_ = slope_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.intercept_ = intercept_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.scale_ = scale_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.decay_ = decay_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.sysTimestampSec_ = sysTimestampSec_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.dispTimestampSec_ = dispTimestampSec_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.CalibrationEntry) {
                    return mergeFrom((DataDefinition.CalibrationEntry)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.CalibrationEntry other) {
                if (other == DataDefinition.CalibrationEntry.getDefaultInstance()) return this;
                if (other.hasSlope()) {
                    setSlope(other.getSlope());
                }
                if (other.hasIntercept()) {
                    setIntercept(other.getIntercept());
                }
                if (other.hasScale()) {
                    setScale(other.getScale());
                }
                if (other.hasDecay()) {
                    setDecay(other.getDecay());
                }
                if (other.hasSysTimestampSec()) {
                    setSysTimestampSec(other.getSysTimestampSec());
                }
                if (other.hasDispTimestampSec()) {
                    setDispTimestampSec(other.getDispTimestampSec());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasSlope()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.CalibrationEntry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.CalibrationEntry) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required double slope = 1;
            private double slope_ ;
            /**
             * <code>required double slope = 1;</code>
             */
            public boolean hasSlope() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required double slope = 1;</code>
             */
            public double getSlope() {
                return slope_;
            }
            /**
             * <code>required double slope = 1;</code>
             */
            public Builder setSlope(double value) {
                bitField0_ |= 0x00000001;
                slope_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required double slope = 1;</code>
             */
            public Builder clearSlope() {
                bitField0_ = (bitField0_ & ~0x00000001);
                slope_ = 0D;
                onChanged();
                return this;
            }

            // optional double intercept = 2;
            private double intercept_ ;
            /**
             * <code>optional double intercept = 2;</code>
             */
            public boolean hasIntercept() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional double intercept = 2;</code>
             */
            public double getIntercept() {
                return intercept_;
            }
            /**
             * <code>optional double intercept = 2;</code>
             */
            public Builder setIntercept(double value) {
                bitField0_ |= 0x00000002;
                intercept_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional double intercept = 2;</code>
             */
            public Builder clearIntercept() {
                bitField0_ = (bitField0_ & ~0x00000002);
                intercept_ = 0D;
                onChanged();
                return this;
            }

            // optional double scale = 3;
            private double scale_ ;
            /**
             * <code>optional double scale = 3;</code>
             */
            public boolean hasScale() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional double scale = 3;</code>
             */
            public double getScale() {
                return scale_;
            }
            /**
             * <code>optional double scale = 3;</code>
             */
            public Builder setScale(double value) {
                bitField0_ |= 0x00000004;
                scale_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional double scale = 3;</code>
             */
            public Builder clearScale() {
                bitField0_ = (bitField0_ & ~0x00000004);
                scale_ = 0D;
                onChanged();
                return this;
            }

            // optional double decay = 4;
            private double decay_ ;
            /**
             * <code>optional double decay = 4;</code>
             */
            public boolean hasDecay() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional double decay = 4;</code>
             */
            public double getDecay() {
                return decay_;
            }
            /**
             * <code>optional double decay = 4;</code>
             */
            public Builder setDecay(double value) {
                bitField0_ |= 0x00000008;
                decay_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional double decay = 4;</code>
             */
            public Builder clearDecay() {
                bitField0_ = (bitField0_ & ~0x00000008);
                decay_ = 0D;
                onChanged();
                return this;
            }

            // optional uint64 sys_timestamp_sec = 5;
            private long sysTimestampSec_ ;
            /**
             * <code>optional uint64 sys_timestamp_sec = 5;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public boolean hasSysTimestampSec() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 5;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public long getSysTimestampSec() {
                return sysTimestampSec_;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 5;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder setSysTimestampSec(long value) {
                bitField0_ |= 0x00000010;
                sysTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 sys_timestamp_sec = 5;</code>
             *
             * <pre>
             * System timestamp - Timestamp representing the internal clock of the receiver
             * </pre>
             */
            public Builder clearSysTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000010);
                sysTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // optional uint64 disp_timestamp_sec = 6;
            private long dispTimestampSec_ ;
            /**
             * <code>optional uint64 disp_timestamp_sec = 6;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public boolean hasDispTimestampSec() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 6;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public long getDispTimestampSec() {
                return dispTimestampSec_;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 6;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder setDispTimestampSec(long value) {
                bitField0_ |= 0x00000020;
                dispTimestampSec_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint64 disp_timestamp_sec = 6;</code>
             *
             * <pre>
             * Display timestamp - Timestamp representing the user configured time displayed on the receiver
             * </pre>
             */
            public Builder clearDispTimestampSec() {
                bitField0_ = (bitField0_ & ~0x00000020);
                dispTimestampSec_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:CalibrationEntry)
        }

        static {
            defaultInstance = new CalibrationEntry(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CalibrationEntry)
    }

    public interface ReceiverStateOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required uint64 timestamp_ms = 1;
        /**
         * <code>required uint64 timestamp_ms = 1;</code>
         */
        boolean hasTimestampMs();
        /**
         * <code>required uint64 timestamp_ms = 1;</code>
         */
        long getTimestampMs();

        // repeated .ReceiverStatus event = 2;
        /**
         * <code>repeated .ReceiverStatus event = 2;</code>
         */
        java.util.List<DataDefinition.ReceiverStatus> getEventList();
        /**
         * <code>repeated .ReceiverStatus event = 2;</code>
         */
        int getEventCount();
        /**
         * <code>repeated .ReceiverStatus event = 2;</code>
         */
        DataDefinition.ReceiverStatus getEvent(int index);
    }
    /**
     * Protobuf type {@code ReceiverState}
     */
    public static final class ReceiverState extends
            com.google.protobuf.GeneratedMessage
            implements ReceiverStateOrBuilder {
        // Use ReceiverState.newBuilder() to construct.
        private ReceiverState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private ReceiverState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ReceiverState defaultInstance;
        public static ReceiverState getDefaultInstance() {
            return defaultInstance;
        }

        public ReceiverState getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ReceiverState(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            timestampMs_ = input.readUInt64();
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            DataDefinition.ReceiverStatus value = DataDefinition.ReceiverStatus.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                    event_ = new java.util.ArrayList<DataDefinition.ReceiverStatus>();
                                    mutable_bitField0_ |= 0x00000002;
                                }
                                event_.add(value);
                            }
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int oldLimit = input.pushLimit(length);
                            while(input.getBytesUntilLimit() > 0) {
                                int rawValue = input.readEnum();
                                DataDefinition.ReceiverStatus value = DataDefinition.ReceiverStatus.valueOf(rawValue);
                                if (value == null) {
                                    unknownFields.mergeVarintField(2, rawValue);
                                } else {
                                    if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                        event_ = new java.util.ArrayList<DataDefinition.ReceiverStatus>();
                                        mutable_bitField0_ |= 0x00000002;
                                    }
                                    event_.add(value);
                                }
                            }
                            input.popLimit(oldLimit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    event_ = java.util.Collections.unmodifiableList(event_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DataDefinition.internal_static_ReceiverState_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DataDefinition.internal_static_ReceiverState_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DataDefinition.ReceiverState.class, DataDefinition.ReceiverState.Builder.class);
        }

        public static com.google.protobuf.Parser<ReceiverState> PARSER =
                new com.google.protobuf.AbstractParser<ReceiverState>() {
                    public ReceiverState parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new ReceiverState(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<ReceiverState> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required uint64 timestamp_ms = 1;
        public static final int TIMESTAMP_MS_FIELD_NUMBER = 1;
        private long timestampMs_;
        /**
         * <code>required uint64 timestamp_ms = 1;</code>
         */
        public boolean hasTimestampMs() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 timestamp_ms = 1;</code>
         */
        public long getTimestampMs() {
            return timestampMs_;
        }

        // repeated .ReceiverStatus event = 2;
        public static final int EVENT_FIELD_NUMBER = 2;
        private java.util.List<DataDefinition.ReceiverStatus> event_;
        /**
         * <code>repeated .ReceiverStatus event = 2;</code>
         */
        public java.util.List<DataDefinition.ReceiverStatus> getEventList() {
            return event_;
        }
        /**
         * <code>repeated .ReceiverStatus event = 2;</code>
         */
        public int getEventCount() {
            return event_.size();
        }
        /**
         * <code>repeated .ReceiverStatus event = 2;</code>
         */
        public DataDefinition.ReceiverStatus getEvent(int index) {
            return event_.get(index);
        }

        private void initFields() {
            timestampMs_ = 0L;
            event_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasTimestampMs()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, timestampMs_);
            }
            for (int i = 0; i < event_.size(); i++) {
                output.writeEnum(2, event_.get(i).getNumber());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(1, timestampMs_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < event_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeEnumSizeNoTag(event_.get(i).getNumber());
                }
                size += dataSize;
                size += 1 * event_.size();
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static DataDefinition.ReceiverState parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.ReceiverState parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.ReceiverState parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static DataDefinition.ReceiverState parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static DataDefinition.ReceiverState parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.ReceiverState parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static DataDefinition.ReceiverState parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static DataDefinition.ReceiverState parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static DataDefinition.ReceiverState parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static DataDefinition.ReceiverState parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(DataDefinition.ReceiverState prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code ReceiverState}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements DataDefinition.ReceiverStateOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DataDefinition.internal_static_ReceiverState_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DataDefinition.internal_static_ReceiverState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DataDefinition.ReceiverState.class, DataDefinition.ReceiverState.Builder.class);
            }

            // Construct using DataDefinition.ReceiverState.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                timestampMs_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                event_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DataDefinition.internal_static_ReceiverState_descriptor;
            }

            public DataDefinition.ReceiverState getDefaultInstanceForType() {
                return DataDefinition.ReceiverState.getDefaultInstance();
            }

            public DataDefinition.ReceiverState build() {
                DataDefinition.ReceiverState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public DataDefinition.ReceiverState buildPartial() {
                DataDefinition.ReceiverState result = new DataDefinition.ReceiverState(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.timestampMs_ = timestampMs_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    event_ = java.util.Collections.unmodifiableList(event_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.event_ = event_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DataDefinition.ReceiverState) {
                    return mergeFrom((DataDefinition.ReceiverState)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DataDefinition.ReceiverState other) {
                if (other == DataDefinition.ReceiverState.getDefaultInstance()) return this;
                if (other.hasTimestampMs()) {
                    setTimestampMs(other.getTimestampMs());
                }
                if (!other.event_.isEmpty()) {
                    if (event_.isEmpty()) {
                        event_ = other.event_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureEventIsMutable();
                        event_.addAll(other.event_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasTimestampMs()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DataDefinition.ReceiverState parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DataDefinition.ReceiverState) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required uint64 timestamp_ms = 1;
            private long timestampMs_ ;
            /**
             * <code>required uint64 timestamp_ms = 1;</code>
             */
            public boolean hasTimestampMs() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required uint64 timestamp_ms = 1;</code>
             */
            public long getTimestampMs() {
                return timestampMs_;
            }
            /**
             * <code>required uint64 timestamp_ms = 1;</code>
             */
            public Builder setTimestampMs(long value) {
                bitField0_ |= 0x00000001;
                timestampMs_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required uint64 timestamp_ms = 1;</code>
             */
            public Builder clearTimestampMs() {
                bitField0_ = (bitField0_ & ~0x00000001);
                timestampMs_ = 0L;
                onChanged();
                return this;
            }

            // repeated .ReceiverStatus event = 2;
            private java.util.List<DataDefinition.ReceiverStatus> event_ =
                    java.util.Collections.emptyList();
            private void ensureEventIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    event_ = new java.util.ArrayList<DataDefinition.ReceiverStatus>(event_);
                    bitField0_ |= 0x00000002;
                }
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public java.util.List<DataDefinition.ReceiverStatus> getEventList() {
                return java.util.Collections.unmodifiableList(event_);
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public int getEventCount() {
                return event_.size();
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public DataDefinition.ReceiverStatus getEvent(int index) {
                return event_.get(index);
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public Builder setEvent(
                    int index, DataDefinition.ReceiverStatus value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureEventIsMutable();
                event_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public Builder addEvent(DataDefinition.ReceiverStatus value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureEventIsMutable();
                event_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public Builder addAllEvent(
                    java.lang.Iterable<? extends DataDefinition.ReceiverStatus> values) {
                ensureEventIsMutable();
                super.addAll(values, event_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated .ReceiverStatus event = 2;</code>
             */
            public Builder clearEvent() {
                event_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ReceiverState)
        }

        static {
            defaultInstance = new ReceiverState(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ReceiverState)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_G4Download_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_G4Download_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SensorGlucoseValueEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SensorGlucoseValueEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_MeterEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_MeterEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_SensorEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_SensorEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_InsertionEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_InsertionEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_CalibrationEntry_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_CalibrationEntry_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ReceiverState_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ReceiverState_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\023DataDefinition.proto\"\244\003\n\nG4Download\022%\n\003" +
                        "sgv\030\001 \003(\0132\030.SensorGlucoseValueEntry\022\033\n\005u" +
                        "nits\030\002 \001(\0162\014.GlucoseUnit\022\032\n\022download_tim" +
                        "estamp\030\003 \002(\t\022 \n\030receiver_system_time_sec" +
                        "\030\004 \001(\004\0228\n\017download_status\030\005 \001(\0162\017.Downlo" +
                        "adStatus:\016NOT_APPLICABLE\022\030\n\020receiver_bat" +
                        "tery\030\006 \001(\r\022\030\n\020uploader_battery\030\007 \001(\r\022\032\n\005" +
                        "meter\030\010 \003(\0132\013.MeterEntry\022\034\n\006sensor\030\t \003(\013" +
                        "2\014.SensorEntry\022\036\n\003cal\030\n \003(\0132\021.Calibratio" +
                        "nEntry\022\037\n\006insert\030\013 \003(\0132\017.InsertionEntry\022",
                "\023\n\013receiver_id\030\014 \001(\t\022\026\n\016transmitter_id\030\r" +
                        " \001(\t\"\224\001\n\027SensorGlucoseValueEntry\022\020\n\010sgv_" +
                        "mgdl\030\001 \002(\r\022\031\n\021sys_timestamp_sec\030\002 \001(\004\022\032\n" +
                        "\022disp_timestamp_sec\030\003 \001(\004\022\027\n\005trend\030\004 \001(\016" +
                        "2\010.G4Trend\022\027\n\005noise\030\005 \001(\0162\010.G4Noise\"n\n\nM" +
                        "eterEntry\022\025\n\rmeter_bg_mgdl\030\001 \002(\r\022\022\n\nmete" +
                        "r_time\030\002 \001(\r\022\031\n\021sys_timestamp_sec\030\003 \001(\004\022" +
                        "\032\n\022disp_timestamp_sec\030\004 \001(\004\"x\n\013SensorEnt" +
                        "ry\022\020\n\010filtered\030\001 \002(\004\022\022\n\nunfiltered\030\002 \001(\004" +
                        "\022\014\n\004rssi\030\003 \001(\r\022\031\n\021sys_timestamp_sec\030\004 \001(",
                "\004\022\032\n\022disp_timestamp_sec\030\005 \001(\004\"d\n\016Inserti" +
                        "onEntry\022\033\n\005state\030\001 \002(\0162\014.G4Insertion\022\031\n\021" +
                        "sys_timestamp_sec\030\002 \001(\004\022\032\n\022disp_timestam" +
                        "p_sec\030\003 \001(\004\"\211\001\n\020CalibrationEntry\022\r\n\005slop" +
                        "e\030\001 \002(\001\022\021\n\tintercept\030\002 \001(\001\022\r\n\005scale\030\003 \001(" +
                        "\001\022\r\n\005decay\030\004 \001(\001\022\031\n\021sys_timestamp_sec\030\005 " +
                        "\001(\004\022\032\n\022disp_timestamp_sec\030\006 \001(\004\"E\n\rRecei" +
                        "verState\022\024\n\014timestamp_ms\030\001 \002(\004\022\036\n\005event\030" +
                        "\002 \003(\0162\017.ReceiverStatus*!\n\013GlucoseUnit\022\010\n" +
                        "\004MGDL\020\000\022\010\n\004MMOL\020\001*\206\001\n\016DownloadStatus\022\013\n\007",
                "SUCCESS\020\000\022\013\n\007NO_DATA\020\001\022\024\n\020DEVICE_NOT_FOU" +
                        "ND\020\002\022\014\n\010IO_ERROR\020\003\022\025\n\021APPLICATION_ERROR\020" +
                        "\004\022\013\n\007UNKNOWN\020\005\022\022\n\016NOT_APPLICABLE\020\006*\266\001\n\007G" +
                        "4Trend\022\016\n\nTREND_NONE\020\000\022\r\n\tDOUBLE_UP\020\001\022\r\n" +
                        "\tSINGLE_UP\020\002\022\021\n\rFORTY_FIVE_UP\020\003\022\010\n\004FLAT\020" +
                        "\004\022\023\n\017FORTY_FIVE_DOWN\020\005\022\017\n\013SINGLE_DOWN\020\006\022" +
                        "\017\n\013DOUBLE_DOWN\020\007\022\022\n\016NOT_COMPUTABLE\020\010\022\025\n\021" +
                        "RATE_OUT_OF_RANGE\020\t*a\n\007G4Noise\022\016\n\nNOISE_" +
                        "NONE\020\000\022\t\n\005CLEAN\020\001\022\t\n\005LIGHT\020\002\022\n\n\006MEDIUM\020\003" +
                        "\022\t\n\005HEAVY\020\004\022\020\n\014NOT_COMPUTED\020\005\022\007\n\003MAX\020\006*\331",
                "\001\n\013G4Insertion\022\022\n\016INSERTION_NONE\020\000\022\013\n\007RE" +
                        "MOVED\020\001\022\013\n\007EXPIRED\020\002\022\026\n\022RESIDUAL_DEVIATI" +
                        "ON\020\003\022\024\n\020COUNTS_DEVIATION\020\004\022\022\n\016SECOND_SES" +
                        "SION\020\005\022\021\n\rOFF_TIME_LOSS\020\006\022\013\n\007STARTED\020\007\022\023" +
                        "\n\017BAD_TRANSMITTER\020\010\022\026\n\022MANUFACTURING_MOD" +
                        "E\020\t\022\r\n\tMAX_VALUE\020\n*C\n\016ReceiverStatus\022\026\n\022" +
                        "RECEIVER_CONNECTED\020\000\022\031\n\025RECEIVER_DISCONN" +
                        "ECTED\020\001"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_G4Download_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_G4Download_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_G4Download_descriptor,
                                new java.lang.String[] { "Sgv", "Units", "DownloadTimestamp", "ReceiverSystemTimeSec", "DownloadStatus", "ReceiverBattery", "UploaderBattery", "Meter", "Sensor", "Cal", "Insert", "ReceiverId", "TransmitterId", });
                        internal_static_SensorGlucoseValueEntry_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_SensorGlucoseValueEntry_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SensorGlucoseValueEntry_descriptor,
                                new java.lang.String[] { "SgvMgdl", "SysTimestampSec", "DispTimestampSec", "Trend", "Noise", });
                        internal_static_MeterEntry_descriptor =
                                getDescriptor().getMessageTypes().get(2);
                        internal_static_MeterEntry_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_MeterEntry_descriptor,
                                new java.lang.String[] { "MeterBgMgdl", "MeterTime", "SysTimestampSec", "DispTimestampSec", });
                        internal_static_SensorEntry_descriptor =
                                getDescriptor().getMessageTypes().get(3);
                        internal_static_SensorEntry_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_SensorEntry_descriptor,
                                new java.lang.String[] { "Filtered", "Unfiltered", "Rssi", "SysTimestampSec", "DispTimestampSec", });
                        internal_static_InsertionEntry_descriptor =
                                getDescriptor().getMessageTypes().get(4);
                        internal_static_InsertionEntry_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_InsertionEntry_descriptor,
                                new java.lang.String[] { "State", "SysTimestampSec", "DispTimestampSec", });
                        internal_static_CalibrationEntry_descriptor =
                                getDescriptor().getMessageTypes().get(5);
                        internal_static_CalibrationEntry_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_CalibrationEntry_descriptor,
                                new java.lang.String[] { "Slope", "Intercept", "Scale", "Decay", "SysTimestampSec", "DispTimestampSec", });
                        internal_static_ReceiverState_descriptor =
                                getDescriptor().getMessageTypes().get(6);
                        internal_static_ReceiverState_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ReceiverState_descriptor,
                                new java.lang.String[] { "TimestampMs", "Event", });
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
